[
  
    {
      "title"    : "데이터를 아름답게 표현하는 방법에 관하여 (ft.Keijiro Takahashi)",
      "category" : "",
      "tags"     : "3D그래픽스, Unity, UniteSeoul2019, KeijiroTakahashi, and GeometryShader",
      "url"      : "/dev/2019/07/02/June.html",
      "date"     : "2019-07-02 16:00:00 +0000",
      "content"   : "<p>안녕하세요. 3D 그래픽스 엔지니어 문현목 입니다. \n<br />\n온라인과 모바일 게임 회사에서 10년 넘게 근무하다가 비 게임 분야를 거쳐 현재 어반베이스에서 근무하고 있습니다. 플랫폼 회사로 성장해 나가는 과정을 함께 하고 있어서 너무 기쁘네요. 어반베이스에서는 3D 데이터를 사용자에게 시각적으로 표현해주는 일을 하고 있습니다. Unity를 이용해 3D Core Engine(UI를 통한 요청 사항을 처리해 3D 오브젝트에 반영)도 만들고 있고요. 이를 통해 3D Home Design, 3D Viewer를 개발합니다.</p>\n\n<p><a href=\"https://youtu.be/sHmokPYTp2Q\">https://youtu.be/sHmokPYTp2Q</a></p>\n\n<p><br /></p>\n\n<h2 id=\"unite-seoul-2019\">Unite Seoul 2019</h2>\n\n<p>지난 5월 21일, 22일 양일간 Unite Seoul 2019에 참가했습니다. 유니티 코리아의 에반젤리스트(Evangelist)를 통해서 듣기로는 약 5천명이 참석했다고 하는데, 작년 대비 천명이 늘어난 수치라고 하네요.</p>\n\n<p>이틀간 세션 프로그램표입니다.</p>\n\n<p>첫째날\n<img src=\"/assets/6_3D graphics/Schedule1.png\" />\n<br />\n둘째날\n<img src=\"/assets/6_3D graphics/Schedule2.png\" /></p>\n\n<p>5개의 트랙으로 다양한 세션이 있었는데요. 제 몸을 복제해서 5개의 세션을 동시에 듣고 싶었으나 분신술을 할 수가 없어서.. 아쉽게도 팀원들과 세션을 나눠 들었습니다.</p>\n\n<p><img src=\"/assets/6_3D graphics/SuperBoardMrSon.png\" width=\"300\" /> \n<img src=\"/assets/6_3D graphics/Naruto.png\" width=\"300\" /></p>\n\n<p>제가 들었던 세션 중에서는,\n<strong>Mark Schoennagel</strong>의 <code class=\"highlighter-rouge\">\"Real-time Ray Tracing In Unity's High Definition Render Pipeline Using Nvidia RTX\"</code>\n<strong>Keijiro Takahashi</strong>의 <code class=\"highlighter-rouge\">\"Unity 기술로 예술적 영감을 불어넣는 방법\"</code>\n그리고 <strong>Julien Frayer와 Thomas Iché</strong>가 발표한 <code class=\"highlighter-rouge\">\"Visual Effect Graph로 실시간 VFX를 제작하는 방법\"</code> 정도가 좋았습니다. \n어떤 것인지는 아래 youtube나 twitter 영상을 참고해 주세요.</p>\n\n<p>2019 BMW 8 Series Coupe를 NVIDIA RTX를 이용하여 Ray Tracing으로 표현한 영상 \n<a href=\"https://www.youtube.com/watch?v=IY8FJxS4Lbs\" target=\"_blank\" style=\"color: #0366d6;\"> (링크) </a></p>\n<center>\n<iframe width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/IY8FJxS4Lbs\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe></center>\n\n<p><br />\n<br /></p>\n\n<p>Unity Visual Effect Graph를 이용하여 표현한 Spaceship 데모 <a href=\"https://www.youtube.com/watch?v=rqMcPZoEc3U\" target=\"_blank\" style=\"color: #0366d6;\"> (링크) </a></p>\n<center><iframe width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/rqMcPZoEc3U\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe></center>\n\n<p><br />\n<br /></p>\n\n<p>RealSense 뎁스 카메라와 유니티 VFX Graph로 표현한 작업 <a href=\"https://github.com/keijiro/Rsvfx\" target=\"_blank\" style=\"color: #0366d6;\"> (링크) </a></p>\n\n<!-- https://twitter.com/_kzr/status/1098900394002964486 -->\n\n<p><img src=\"https://camo.githubusercontent.com/2bc3c65923f8e3db7131ab50e1254164ac25c558/68747470733a2f2f692e696d6775722e636f6d2f4b304338304c662e676966\" alt=\"gif\" data-canonical-src=\"https://i.imgur.com/K0C80Lf.gif\" style=\"max-width:100%;\" />\n<img src=\"https://camo.githubusercontent.com/262d2fa83c11137e79d46a8df3b22e72480e6505/68747470733a2f2f692e696d6775722e636f6d2f6a4278494930742e676966\" alt=\"gif\" data-canonical-src=\"https://i.imgur.com/jBxII0t.gif\" style=\"max-width:100%;\" /></p>\n\n<p>이 중에서도 Keijiro Takahashi의 세션이 개인적으로 가장 인상 깊었는데요. 이번 콘텐츠에서는 이 세션을 통해 새롭게 알게 된 Geometry Shader에 대한 소개와 함께 실무 적용기를 한번 정리해봤습니다.</p>\n\n<p><br />\n<br />\n<br /></p>\n\n<h2 id=\"keijiro-takahashi\">케이지로 다카하시 (Keijiro Takahashi)</h2>\n\n<p>Unity Japan의 에반젤리스트로 일본 게임 산업에 10년 이상 있었고, 콘솔과 모바일 게임 개발 방법론에서 풍부한 경험을 가지고 있습니다. Unity에는 2012년에 합류했다고 하는데요, Unity로 훌륭한 게임을 만들 수 있도록 돕고, 강의를 하고, 책을 쓰고 있습니다.</p>\n\n<p><br /></p>\n\n<p>*Source: <a href=\"https://unity3d.com/kr/community/evangelists\">https://unity3d.com/kr/community/evangelists</a></p>\n\n<!-- <https://twitter.com/_kzr/status/1127888862460534784?lang=bg> -->\n<p><br />\nUnite Shanghai 2019에서 보여준 비파 연주를 VFX Graph와 RealSense로 표현한 영상 <a href=\"https://twitter.com/_kzr/status/1127888862460534784?lang=bg\" target=\"_blank\" style=\"color: #0366d6;\"> (보러가기) </a>\n<img src=\"/assets/6_3D graphics/UniteShanghaiVFX.png\" /></p>\n\n<p>상하이 음악 아카데미에서 비파 선생님으로 계시는 분과 라이브 퍼포먼스를 했고, 실시간으로 이펙트를 표현했다고 하더라고요. Intel에서 나오는 RealSense라는 뎁스 카메라로부터 정보를 얻어서 VFX Graph에 입력, 파티클을 생성하도록 표현한 작업이라고 설명했습니다.</p>\n\n<p><br /></p>\n\n<p><img src=\"/assets/6_3D graphics/RealsenseAttribVFX.png\" /></p>\n\n<p><strong>*VFX Graph에 대한 Unity Blog:</strong> <br />\n<a href=\"https://blogs.unity3d.com/kr/2018/11/27/creating-explosive-visuals-with-the-visual-effect-graph/\">https://blogs.unity3d.com/kr/2018/11/27/creating-explosive-visuals-with-the-visual-effect-graph/</a>\n<br />\n<br />\n<strong>*인텔 RealSense 뎁스 카메라를 유니티 VFX Graph에 연결하는 예제:</strong><br />\n<a href=\"https://github.com/keijiro/Rsvfx\">https://github.com/keijiro/Rsvfx</a></p>\n\n<p><br /></p>\n\n<p>덧붙여, 기온이나 날씨 같은 기상 정보는 물론 인구 밀도, 공기질 정보(AQI) 등의 데이터를 비주얼라이제이션 하는 방법도 생각해 볼 수 있을 것이라고 하며, 두 가지 케이스를 이야기 했는데요. 한 가지는 Geometry Shader Effect, 다른 한가지는 Deep Learning을 통한 pix2pix VFX 였습니다. 이번 글에서는 Geometry Shader Effect에 대한 내용만 다뤄볼게요.</p>\n\n<p><br />\n<br /></p>\n\n<h2 id=\"geometry-shader-effect\">Geometry Shader Effect</h2>\n\n<p><strong>*Keijiro의 Standard Geometry Shader github :</strong>\n<a href=\"https://github.com/keijiro/StandardGeometryShader\">https://github.com/keijiro/StandardGeometryShader</a></p>\n\n<p>Keijiro는 Geometry shader에 효과를 주었다고 했는데요. Vertex Shader나 Pixel(Fragment) Shader는 많이 들어보셨겠지만 Geometry shader는 좀 생소하실 수 있을 것 같습니다. Geometry Shader Effect를 이해하기 위해서, Graphics Pipeline을 통해 Geometry Shader의 개념에 대해 먼저 소개하려고 합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"graphics-pipeline\">Graphics Pipeline</h3>\n\n<p>3D 그래픽스에서는 3D 모델 데이터를 스크린 화면에 렌더링하기까지의 과정을 ‘렌더링 파이프라인’이라고 합니다. 아래는 위키에 나와있는 그래픽스 파이프라인에 대한 이미지 인데요. 독일인이 작성한 자료라서 영어랑 스펠링에 차이가 좀 있긴 하지만, 감안하셔서 참고하시면 좋을 듯 합니다.</p>\n\n<p><a href=\"https://commons.wikimedia.org/wiki/File:3D-Pipeline.png#/media/File:3D-Pipeline.png\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/5/54/3D-Pipeline.png\" alt=\"Programmable 3D-Pipeline.\" /></a><br />By <a href=\"https://de.wikipedia.org/wiki/Benutzer:Martin_Wantke\" class=\"extiw\" title=\"de:Benutzer:Martin Wantke\">Martin Wantke</a> - <span class=\"int-own-work\" lang=\"en\">Own work</span>, Public Domain, <a href=\"https://commons.wikimedia.org/w/index.php?curid=35922943\">Link</a></p>\n\n<p><br /></p>\n\n<p>Vertex-Shader와 3D Coordinate(좌표) 정보로 Animation, Transformation 표현 -&gt; Hull-Shader, Domain-Shader로 Tessellation이 이루어지며 -&gt; Geometry Shader 처리 후 -&gt; Perspective Transformation 처리(3D에서 2D로 변환, Z-buffer 처리) -&gt; Clipping, Backface Culling이 된 다음 -&gt; Triangle Rasterization -&gt; Pixel-Shading이 되고 (텍스쳐의 픽셀화) -&gt; 이후 Z-Test, Alpha-Blending을 하며 Antialiasing 처리 -&gt; Postprocessing 의 과정이네요.</p>\n\n<ul>\n  <li>Z-buffer: 깊이 버퍼, 어떤 것이 그려지고 어떤 것이 가려지는 것을 처리하기 위한 정보</li>\n  <li>Clipping: 화면 밖에 있는 것은 그릴 필요 없으므로 잘라짐</li>\n  <li>Backface Culling: 카메라를 마주본 표면(front face)만 그리고 안쪽 뒷면은 그리지 않음</li>\n  <li>Triangle Rasterization: 아래 이미지 참고</li>\n  <li>Alpha-Blending: 투명도 값에 따라 섞어주는 계산</li>\n  <li>Antialiasing: 픽셀이 계단처럼 끊어지지 않고 부드럽게 그려지기 위해 처리하는 기법으로 해당 <a href=\"https://namu.wiki/w/%EC%95%88%ED%8B%B0%EC%97%90%EC%9D%BC%EB%A6%AC%EC%96%B4%EC%8B%B1\">링크</a>에서 다양한 AA기법 확인 가능</li>\n</ul>\n\n<p><img src=\"https://www.ntu.edu.sg/home/ehchua/programming/opengl/images/Graphics3D_Pipe.png\" /></p>\n\n<p>*Source : <a href=\"https://www.ntu.edu.sg/home/ehchua/programming/opengl/cg_basicstheory.html\">https://www.ntu.edu.sg/home/ehchua/programming/opengl/cg_basicstheory.html</a></p>\n\n<p><strong>Vertex Shader</strong>는 GPU에서 실행되는 프로그램 중 하나입니다. 3D 데이터는 각각의 정점들이 모여 형태를 구성하는데, Vertex-Shader 프로그램에서 이 Vertex 정보를 어떻게 그릴지 결정해줍니다. 정점의 정보에는 위치(x,y,z 좌표), 컬러, 텍스쳐 UV 좌표, Normal 값이 들어가는데요. Vertex Shader에서 이러한 정점 정보를 변화시켜서 위치를 옮기거나 텍스쳐를 바꾸거나 색상을 바꾸는 등의 작업을 처리할 수 있습니다.</p>\n\n<p><strong>Geometry Shader</strong>는 Vertex Shader에서 할 수 없는 점이나 선, 삼각형 등 도형을 생성할 수 있는 기능이 있습니다. 정점 3개가 모여 하나의 삼각형을 이루고 이 삼각형이 Geometry Shader에 들어와서 정점을 없애거나 더 많은 도형을 만들 수 있습니다. Rasterization을 거쳐 Pixel Shader로 넘어갑니다.</p>\n\n<p><strong>Pixel(Fragment) Shader</strong>는 화면에서 각 픽셀이 어떠한 컬러로 그려질지 계산합니다. 같은 색을 출력하거나 텍스쳐로부터 색을 읽어오고, 빛을 적용하고, 굴곡을 표현하는 범프 맵핑, 그림자, 반사광, 투명처리 등을 계산할 수 있습니다.</p>\n\n<p><strong>Geometry Shader Effect</strong>는 Geometry Shader에서 점이나 선, 삼각형 등 도형을 생성할 수 있기 때문에 이러한 부분을 효과로 표현하게 됩니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"geometry-shader-effect--2d----3d-\">Geometry Shader Effect 이용해 2D 도면 -&gt; 3D로 표현하기</h3>\n\n<p>어반베이스는 <strong>2D도면을 몇 초 만에 3D 공간으로 변환하는 기술</strong>을 보유하고 있는데요. Geometry Shader에 대한 이야기를 듣다 보니, 데이터 시각화하는 부분에서 2D 도면 데이터에 높이값을 적용하여 3D로 변환하는 작업이 가능할 것 같다는 생각이 들었습니다. 문이나 창 같은 부분은 표현하지 못하겠지만 벽에 대하여 일정한 높이로 Geometry를 변형하여 2D를 3D로 표현하면 무언가 재미있는 결과가 나올 것 같았습니다.</p>\n\n<p>Keijiro의 Github 중 <a href=\"https://github.com/keijiro/StandardGeometryShader\">Standard Geometry Shader</a> 를 참고해 실제 적용을 해보았습니다. Shader 코드도 있기 때문에 Geometry shader에서 어떤 작업을 하는지 볼 수 있습니다.</p>\n\n<p>Assets/StandardGeometry.cginc 파일을 클릭하면, 117 줄부터 void Geometry( … ) 함수가 있습니다. 내부에서 어떤 일을 하는지 보면 Vertex inputs라고 주석이 있습니다. wp는 world position 이고요. 입력 받은 삼각형의 세 개 정점 위치를 변수에 넣고, uv 좌표도 변수에 넣습니다. Extrusion amount라고 되어있는데,삼각형을 얼마나 수직으로 늘려줄지 그 늘어나는 길이를 계산하는 부분입니다. 로컬 시간에 2 PI(π)를 곱해 cos 함수에 넣습니다.</p>\n\n<p><img src=\"http://tananyag.geomatech.hu/files/00/01/17/94/material-1179486.png?v=1497014242\" width=\"600\" /></p>\n\n<blockquote>\n  <p>“cos 함수는 반지름이 1인 원에서 0°에서 360° (2 π)로 움직이는 점의 x 좌표값입니다. 0°에서 1이고, 90°가 될 때 0이고, 180°가 될 때 -1이 되고, 270°가 될 때 0이 되고 360°가 되면 다시 1이 됩니다. 물결 같은 파동 그래프라고 볼 수 있고, 1에서 -1까지 범위로 진동을 한다고 볼 수 있습니다. 참고로 sin 함수는 y좌표입니다.”</p>\n</blockquote>\n\n<p>다시 함수로 돌아와서 extrude를 얼마나 할지는 cos함수로 진동하는 값을 구하고 이 값에 추가로 sin함수를 곱하여 ext값을 계산합니다. 어떤 움직임이 될지는 <a href=\"https://www.desmos.com/calculator\">해당</a> 사이트에서 실시간으로 그래프를 볼 수 있습니다.</p>\n\n<p>y = (0.4 - cos (x * 6.28) * 0.41) * (1 + 0.3 * sin(832 + x * 88) )</p>\n\n<p><img src=\"/assets/6_3D graphics/extWave.png\" /></p>\n\n<p>이런 모양의 그래프가 되네요.</p>\n\n<p>코드로 다시 옵니다. Extrusion points가 있습니다. ConstructNormal은 세 점을 이용하여 삼각형에 수직인 법선 벡터(Normal vector)를 구하는 함수입니다. 법선 벡터의 위에서 구한 extrusion amount를 곱하여 offset으로 사용하네요. 각각의 세 점에 offset을 더하여 새로운 점을 저장해두고, 제일 윗쪽의 삼각형(Cap triangle)을 구하고, 옆면(Side faces)의 버텍스 정보를 구해서 outStream에 넣습니다.</p>\n\n<p>Git으로 받은 StandardGeometryShader 프로젝트를 Unity에서 열어 Simple 씬을 열어봅니다. 플레이를 해보면 다음과 같이 나옵니다.</p>\n\n<p><img src=\"/assets/6_3D graphics/SphereGeometry.png\" /></p>\n\n<p>이제 우리 도면을 적용해보면 어떤 모습일지 궁금해지네요. 테스트로 사용하는 3D 도면 파일을 Unity에 가져와서 벽 영역에 해당하는 부분을 Sphere 오브젝트의 MeshFilter 콤포넌트에 적용해봅니다.</p>\n\n<p><img src=\"/assets/6_3D graphics/TooMuch.png\" /></p>\n\n<p>주황색 아웃라인으로 나오는 부분이 2D 벽 영역이 되고, 이것을 Geometry Shader에서 위와 같은 함수를 처리하여 표면에 수직인 방향으로 Extrusion 되는 것을 확인할 수 있습니다. 그런데 Y축 방향으로의 Extusion만 처리해주고 X,Z 축 방향의 확장은 막아보고 싶습니다. 그리고 움직임이 너무 복잡한 것 같으니 단순한 진동형태로 바꿔보고 싶습니다.</p>\n\n<ul>\n  <li>요구사항:</li>\n</ul>\n\n<ol>\n  <li>Y 축방향으로만 확장</li>\n  <li>단순한 진동형태로 변경</li>\n</ol>\n\n<blockquote>\n  <p>“빨간, 파랑, 녹색 화살표가 보이는데 이것은 좌표 축을 보여주는 것이고, RGB 순서로 XYZ 축이라고 보면 됩니다. 상(上)방향 벡터가 녹색이고 Y축이라는 것을 알 수 있습니다. Unity 에서는 이러한 왼손 좌표계를 사용하는 것이고 다른 엔진이나 라이브러리에서는 좌표축이 다를 수 있습니다.”</p>\n</blockquote>\n\n<p>단순한 진동 형태로의 변경은 extrusion amount를 계산하는 부분을 수정하면 되고, Y축으로 확장을 제약하는 것은 세 점을 넣어서 법선 벡터를 구하는 부분에서 필터링을 할 수 있습니다.</p>\n\n<p>그래프를 그려주는 <a href=\"https://www.desmos.com/calculator\">사이트</a>로 가서 식을 변경해 보겠습니다. Sin 함수를 곱해주는 부분을 빼보았습니다.</p>\n\n<p>y = (0.4 - cos (x * 6.28) * 0.41)</p>\n\n<p>이 그래프를 보면 다음과 같습니다.</p>\n\n<p><img src=\"/assets/6_3D graphics/extWaveSimple.png\" /></p>\n\n<p>좀더 단순한 형태의 그래프로 바뀌었습니다. cos 함수 그래프를 약간 변형한 것이라고 보면 됩니다. 쉐이더 코드 부분도 sin 함수 부분을 주석처리하여 cos 함수로만 extrusion amount를 구하도록 변경 합니다.</p>\n\n<p>cos 함수만 이용해 extrusion amount를 구한 결과입니다.</p>\n\n<p><img src=\"/assets/6_3D graphics/SimpleButAllDirection.png\" /></p>\n\n<p>ConstructNormal 함수를 보면 세 점을 이용하여 외적(cross product)을 통해 삼각형의 법선 벡터를 구하고 이 벡터의 크기를 1로 바꾸는 normalize 처리를 합니다. 여기서 Normal 방향을 녹색 화살표 방향(Y축)으로만 Normal 값이 나올 수 있도록 normalize 결과 벡터의 x성분과 z성분을 0으로 초기화 합니다. y성분만 남게 됩니다.</p>\n\n<p>Y축 방향의 법선 벡터만 구해주는 ConstructNormal을 적용한 결과입니다.</p>\n\n<p><img src=\"/assets/6_3D graphics/OnlyUpDirection.png\" /></p>\n\n<p>아래는 플레이 한 것을 캡쳐한 것입니다. Y축 방향으로만 확장되었다가 줄어드는 것을 확인할 수 있습니다. 양수 방향과 음수 방향으로 모두 확장됩니다.</p>\n\n<p><img src=\"/assets/6_3D graphics/captureGIF.gif\" /></p>\n\n<p>ComputeNormal 함수에서 normalize 된 벡터의 y 성분에서 음수의 경우 0으로 만들면 양수 방향으로만 확장되는 것을 확인할 수 있습니다.</p>\n\n<p>Geometry Shader를 이용하여 2D 평면을 추가로 Triangle을 생성, Geometry를 만드는 것을 보았는데요. Deferred Rendering만 지원하고 Forward rendering은 지원하지 않는다는 것, lightmap,shadowmask,motion vectors 등을 지원하지 않고, XR(VR과 AR을 합쳐서 XR이라 표현)에서는 테스트가 불가하다는 것 등의 한계점이 있었지만 Geometry Shader를 통해 추가로 Triangle을 GPU에서 생성할 수 있다는 것을 확인할 수 있었습니다.</p>\n"
    } ,
  
    {
      "title"    : "모폴로지 변환 활용해 도면의 벽 검출하기",
      "category" : "",
      "tags"     : "ComputerVision, OpenCV, 모폴로지변환, and morphological_transformations",
      "url"      : "/dev/2019/06/03/Morphological-Transformations.html",
      "date"     : "2019-06-03 00:00:00 +0000",
      "content"   : "<p>안녕하세요. Computer Vision 개발자 윤대희입니다. \n<br />\n어반베이스에서는 실시간으로 2D 도면을 3차원으로 자동 변환해주는 AutoSketch 개발을 담당하고 있습니다.</p>\n\n<p><a href=\"https://youtu.be/sHmokPYTp2Q\" target=\"_blank\"><img src=\"/assets/tech(demo)/1. auto sketch (thumbnail).png\" alt=\"autosketch\" /></a>\n<strong><center>이미지를 클릭하면 영상으로 이동합니다.</center></strong></p>\n\n<p><br />\n<br /></p>\n\n<p>이번 글에서는 <strong>모폴로지 변환(morphological transformations)을 활용해 도면의 벽을 검출하는 방식</strong>을 설명해보고자 합니다. 이미지는 일반적으로 <code class=\"highlighter-rouge\">래스터 그래픽스(Raster graphics)*</code> 이미지 인데요,  래스터 그래픽스 이미지에는 수많은 노이즈(noise)가 포함되어 있습니다. 노이즈는 객체의 검출을 방해하는 주된 요소이기 때문에 노이즈를 최소화하거나 제거하는 것이 검출의 핵심입니다.</p>\n\n<h5> *래스터 그래픽스 : 비트맵 이미지로, 격자판의 형태로 각 격자마다 화소의 데이터가 담겨있는 이미지 파일 포맷</h5>\n\n<p>도면에는 수많은 정보가 포함되어 있어 검출하려는 벽 이외의 정보는 모두 노이즈가 됩니다. &lt;그림 1.1&gt;을 통해 벽 검출을 방해하는 다양한 요소들을 볼 수 있습니다.</p>\n\n<figure>\n    <img data-action=\"zoom\" src=\"/assets/5_morphology transformation/1.png\" alt=\"&lt;그림 1.1&gt;\" />\n    <figcaption><center> &lt;그림 1.1&gt; 벽의 검출을 방해하는 요소들 </center>\n    </figcaption>\n</figure>\n\n<p>문, 창문, 세면대를 비롯해 워터마크나 방을 표시하는 그라데이션 등이 모두 벽의 검출을 방해하는 요소들입니다. 이 모든 요소를 제거하고 이상적인 벽의 데이터만 출력하기 위해 많은 방식들 중 모폴로지 변환을 사용합니다. 도면에서 벽이 검출되기까지 일련의 과정을 보시면 아래와 같습니다.</p>\n\n<p><br />\n<br /></p>\n\n<figure>\n    <img data-action=\"zoom\" src=\"/assets/5_morphology transformation/2.png\" alt=\"&lt;그림 1.2&gt;\" />\n    <figcaption><center> &lt;그림 1.2&gt; 도면 원본 이미지 </center>\n    </figcaption>\n</figure>\n\n<p><br />\n<br /></p>\n\n<figure>\n    <img data-action=\"zoom\" src=\"/assets/5_morphology transformation/3.png\" alt=\"&lt;그림 1.3&gt;\" />\n    <figcaption><center> &lt;그림 1.3&gt; 기본적인 전처리 과정 진행 </center>\n    </figcaption>\n</figure>\n\n<p><br />\n<br /></p>\n\n<figure>\n    <img data-action=\"zoom\" src=\"/assets/5_morphology transformation/4.png\" alt=\"&lt;그림 1.4&gt;\" />\n    <figcaption><center> &lt;그림 1.4&gt; 모폴로지 변환을 적용해 노이즈 제거 </center>\n    </figcaption>\n</figure>\n\n<p><br />\n<br /></p>\n\n<p>&lt;그림 1.2&gt;는 원본 도면 이미지이며, &lt;그림 1.3&gt;은 기본적인 전처리가 적용된 이미지, 마지막으로 &lt;그림 1.4&gt;는 전처리가 진행된 이미지에서 문자, 도면 기호, 노이즈 등 불필요한 요소들을 제거한 결과 이미지입니다. 모폴로지 변환은 이렇게 노이즈를 제거하는 용도로 주로 활용됩니다. 이제부터 모폴로지 변환에 대해 알아보도록 하겠습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h2 id=\"section\">모폴로지 변환</h2>\n\n<p>모폴로지 변환은 동영상이나 이미지를 형태학적 관점에서 접근하는 기법으로 영상 내의 픽셀값을 대체하기 위해 사용합니다. <strong>전처리 또는 후처리 과정에서 가장 많이 사용되는 연산</strong>이며, 집합의 포함 관계나 이동(translation), 대칭(reflection), 여집합(complement), 차집합(difference) 등을 적용해 <strong>노이즈 제거, 그라디언트(gradient) 정의, 요소 결합 및 분리, 강도 피크(peaks) 검출 등에 활용</strong>합니다.</p>\n\n<p><br /></p>\n\n<p>기본적인 모폴로지 변환으로는 팽창 연산과 침식 연산이 있습니다. 팽창 연산과 침식 연산은 이미지와 <code class=\"highlighter-rouge\">커널(kernel)*</code> 간 컨볼루션(convolution) 연산이며, 이 두 가지 기본 연산을 기반으로 복잡하고 다양한 모폴로지 연산을 구현할 수 있습니다.</p>\n\n<h5> *커널 (kernel) : 이미지에서 (x, y)의 픽셀과 해당 픽셀 주변을 포함한 작은 크기의 공간 </h5>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"dilation\">팽창(dilation)</h3>\n\n<p>팽창 연산은 커널 영역 안에 존재하는 모든 픽셀 값을 커널 내부의 <strong>극댓값(local maximum)으로 대체</strong>합니다. 즉, 구조 요소(element)를 활용해 현재 픽셀에서 이웃한 픽셀을 최대 픽셀값으로 대체하는 것인데요, 팽창 연산을 적용하면 어두운 영역은 줄어들고 밝은 영역은 늘어납니다.</p>\n\n<p>커널의 크기나 반복 횟수에 따라 밝은 영역이 늘어나 스펙클(speckle)이 커지며 객체 내부의 홀(holes)이 사라지는 특징이 있습니다. <strong>노이즈 제거 후 줄어든 크기를 복구하고자 할 때 주로 사용하는 연산</strong>입니다. 수식으로 표현한다면 다음과 같습니다.</p>\n\n<p><img src=\"/assets/morphology transformation/math 1.png\" alt=\"팽창 수식\" /></p>\n\n<p><br /></p>\n\n<h3 id=\"erosion\">침식(erosion)</h3>\n\n<p>반면, 침식 연산은 커널 영역 안에 존재하는 모든 픽셀의 값을 커널 내부의 <strong>극솟값(local minimum)으로 대체</strong>합니다. 즉, 구조 요소(element)를 활용해 현재 픽셀에서 이웃한 픽셀을 최소 픽셀값으로 대체하게 됩니다. 침식 연산을 적용하면 밝은 영역은 줄어들고 어두운 영역은 늘어납니다.</p>\n\n<p>커널의 크기나 반복 횟수에 따라 어두운 영역이 늘어나 스펙클(speckle)이 사라지며 객체 내부의 홀(holes)이 커집니다. 이 연산은 <strong>노이즈 제거에 주로 사용</strong>되며, 아래와 같은 수식으로 표현합니다.</p>\n\n<p><img src=\"/assets/morphology transformation/math 2.png\" alt=\"침식 수식\" /></p>\n\n<p><br /></p>\n\n<h3 id=\"section-1\">구조 요소</h3>\n\n<p>모폴로지 연산은 커널의 영향을 크게 받으며 커널의 형태에 따라 결과가 달라지는데요, 커널보다 더 복잡한 개념인 <strong>구조 요소(element)를 사용해 커널의 형태(shape)를 설정</strong>할 수 있습니다. 커널은 n×n 크기의 직사각형 또는 정사각형 구조로만 활용하지만 <strong>구조 요소는 직사각형을 비롯해 타원, 십자 모양의 형태로도 활용이 가능</strong>합니다. 모폴로지 변환은 이 구조 요소를 사용해 수행합니다. Python OpenCV에서 활용되는 구조 요소 생성 함수는 다음과 같습니다.</p>\n\n<p><br /></p>\n\n<p><strong>Python OpenCV 구조 요소 생성 함수</strong></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">kernel</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">getStructuringElement</span><span class=\"p\">(</span>\n    <span class=\"n\">shape</span><span class=\"p\">,</span>\n    <span class=\"n\">ksize</span><span class=\"p\">,</span>\n    <span class=\"n\">anchor</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n<span class=\"p\">)</span></code></pre></figure>\n\n<p><br /></p>\n\n<p>구조 요소 생성 함수는 커널의 형태를 설정할 수 있으며, 직사각형(Rect), 십자가(Cross), 타원(Ellipse)의 모양으로 구조화 요소를 생성합니다. 커널의 크기는 ksize 매개변수를 통해 설정하고, anchor 매개변수는 커널을 정렬하는 방식을 지정해 고정점(anchor)을 설정합니다. 커널의 크기가 작을 경우 구조 요소의 모양에 영향을 받지 않습니다. 커널의 크기가 작으면, 십자가 구조와 타원 구조를 비교했을 때 서로 형태가 동일해진다고 보면 됩니다.</p>\n\n<p>또한, 고정점은 필수 매개변수가 아닙니다. 미리 고정점의 위치를 할당하지 않고 모폴로지 함수에서 고정점의 위치를 할당할 수 있습니다. 고정점을 할당하지 않는다면 조금 더 유동적인 커널을 생성할 수 있습니다. &lt;표 1.1&gt;은 커널의 형태에 대한 플래그를 정리한 것입니다.</p>\n\n<p><img src=\"/assets/morphology transformation/table.png\" alt=\"표 1.1\" /></p>\n\n<center> \n&lt;표 1.1&gt; 구조 요소 생성 함수 중 커널의 형태에 따른 플래그\n</center>\n\n<p><br />\n<br /></p>\n\n<p>이제 팽창과 침식 변환 함수를 알아보도록 하겠습니다. 다음 함수는 Python OpenCV에서 활용되는 팽창 함수와 침식 함수입니다.</p>\n\n<p><strong>Python OpenCV의 팽창 함수</strong></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">dilate</span><span class=\"p\">(</span>\n    <span class=\"n\">src</span><span class=\"p\">,</span>\n    <span class=\"n\">kernel</span><span class=\"p\">,</span>\n    <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">iterations</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">borderType</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">borderValue</span><span class=\"o\">=</span><span class=\"bp\">None</span>\n<span class=\"p\">)</span></code></pre></figure>\n\n<p><br /></p>\n\n<p><strong>Python OpenCV의 침식 함수</strong></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">erode</span><span class=\"p\">(</span>\n    <span class=\"n\">src</span><span class=\"p\">,</span>\n    <span class=\"n\">kernel</span><span class=\"p\">,</span>\n    <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">iterations</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">borderType</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">borderValue</span><span class=\"o\">=</span><span class=\"bp\">None</span>\n<span class=\"p\">)</span></code></pre></figure>\n\n<p><br /></p>\n\n<p>모폴로지 변환의 팽창과 침식 함수는 동일한 매개변수의 형태를 사용합니다. 입력 이미지(src)에 구조 요소를 사용해 팽창 또는 침식을 사용하는데, 고정점을 함수 내에서 할당할 수 있으며, 반복 횟수(iterations)를 설정해 해당 함수가 몇 회 연산할지 선택합니다. 모폴로지 변환 함수는 커널을 활용하므로 컨볼루션 연산처럼 테두리 외삽법(borderMode)과 테두리 색상(borderValue)을 설정할 수 있습니다.</p>\n\n<p><br />\n<br />\n<br /></p>\n\n<h2 id=\"section-2\">모폴로지 연산</h2>\n\n<p>모폴로지 연산은 모폴로지 변환의 팽창과 침식을 기본 연산으로 사용해 고급 형태학을 적용하는 변환 연산입니다. <strong>입력 이미지가 이진화된 이미지라면 팽창과 침식 연산으로도 우수한 결과를 얻을 수 있지만 그레이스케일이나 다중 채널 이미지를 사용하는 경우 더 복잡한 연산을 필요로 합니다.</strong> 이때 모폴로지 연산을 활용한다면 좀 더 나은 결과를 얻을 수 있습니다. 먼저 모폴로지 연산 함수부터 알아보도록 하겠습니다.</p>\n\n<p><br /></p>\n\n<p><strong>Python OpenCV의 모폴로지 연산 함수</strong></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">morphologyEx</span><span class=\"p\">(</span>\n    <span class=\"n\">src</span><span class=\"p\">,</span>\n    <span class=\"n\">op</span><span class=\"p\">,</span>\n    <span class=\"n\">kernel</span><span class=\"p\">,</span>\n    <span class=\"n\">anchor</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">iterations</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">borderType</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">borderValue</span><span class=\"o\">=</span><span class=\"bp\">None</span>\n<span class=\"p\">)</span></code></pre></figure>\n\n<p>모폴로지 연산 함수는 모폴로지 변환의 팽창, 침식 함수와 형태가 흡사합니다. 모폴로지 변환에 기반을 두고 있기 때문에 커널, 반복횟수, 테두리 외삽법, 테두리 색상을 동일하게 사용합니다. 하지만 <strong>모폴로지 연산 함수는 연산자(op)라는 매개변수를 추가로 사용하는데요. 연산자는 모폴로지 변환 함수를 조합해서 변환할 복합 연산 방식을 의미</strong>합니다. 모폴로지 연산 함수는 다양한 방식으로 모폴로지 연산을 활용할 수 있습니다. 모폴로지 연산 함수는 총 여덟 가지의 모폴로지 변환을 지원하는데, 이번 글에서는 가장 많이 쓰이는 열림(open)과 닫힘(close) 연산에 대해서만 소개드리고자 합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"opening\">열림(Opening)</h3>\n\n<p>열림 연산은 팽창 연산자와 <strong>침식 연산자의 조합으로 침식 연산을 적용한 후 팽창 연산을 적용</strong>하는 방식입니다. 열림 연산을 적용하면 침식 연산으로 인해 밝은 영역이 줄어들고 어두운 영역이 늘어나는데, 줄어든 영역을 다시 복구하기 위해 팽창 연산을 적용하면 반대로 어두운 영역이 줄어들고 밝은 영역이 늘어납니다. 그 결과, <strong>스펙클(speckle)이 사라지면서 줄어든 객체의 크기를 본래의 사이즈로 복구</strong>할 수 있습니다. 다음 수식은 열림 연산을 나타냅니다.</p>\n<h3>\n<center>\ndst = dilate(erode(src))\n</center>\n</h3>\n\n<p>&lt;그림 1.5&gt;를 통해 전처리가 진행된 이미지(그림 1.3)에서 열림 연산을 적용한 결과를 볼 수 있습니다.</p>\n\n<figure>\n    <img data-action=\"zoom\" src=\"/assets/5_morphology transformation/5.png\" alt=\"&lt;그림 1.5&gt;\" />\n    <figcaption><center> &lt;그림 1.5&gt; 3x3 직사각형 구조, 반복횟수 3회를 적용한 열림 연산 </center>\n    </figcaption>\n</figure>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"closing\">닫힘(Closing)</h3>\n<p>닫힘 연산은 열림 연산과 동일하게 팽창 연산자와 침식 연산자의 조합입니다. 열림과 반대로 <strong>팽창 연산을 적용한 다음, 침식 연산을 적용</strong>한다는 점이 다릅니다. 닫힘 연산은 팽창 연산으로 인해 어두운 영역이 줄어들고 밝은 영역이 늘어나게 되는데, 늘어난 영역을 다시 복구하기 위해 침식 연산을 적용하면 밝은 영역이 줄어들고 어두운 영역이 늘어납니다. 그 결과로 <strong>객체 내부의 홀(holes)이 사라지면서 증가한 크기를 본래의 사이즈로 복구</strong>할 수 있습니다.  다음 수식은 닫힘 연산을 나타냅니다.</p>\n\n<h3>\n<center>\ndst = erode(dilate(src))\n</center>\n</h3>\n\n<figure>\n    <img data-action=\"zoom\" src=\"/assets/5_morphology transformation/6.png\" alt=\"&lt;그림 1.6&gt;\" />\n    <figcaption><center> &lt;그림 1.6&gt; 3x3 직사각형 구조, 반복횟수 3회를 적용한 닫힘 연산 </center>\n    </figcaption>\n</figure>\n\n<p><br />\n<br /></p>\n\n<p>모폴로지 연산을 통해 노이즈를 제거하고 벽을 검출했습니다. 하지만 비교적 크기가 큰 노이즈는 남게 되는데요, 이런 노이즈도 간단한 후처리가 진행되면 &lt;그림 1.4&gt;와 같이 벽만 남길 수 있습니다. 다음 코드는 모폴로지 변환의 사용법을 보여줍니다.</p>\n\n<p><strong>함수 사용 예시</strong></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s\">\"img.jpg\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">kernel</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">getStructuringElement</span><span class=\"p\">(</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">MORPH_RECT</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"n\">dst</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">morphologyEx</span><span class=\"p\">(</span><span class=\"n\">dst</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">MORPH_CLOSE</span><span class=\"p\">,</span> <span class=\"n\">kernel</span><span class=\"p\">,</span> <span class=\"n\">iterations</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span></code></pre></figure>\n\n<p><br />\n<br /></p>\n\n<p>마지막으로, 모폴로지 변환을 사용하는 경우 알아두면 좋은 점과 주의할 점 몇 가지를 알려드리면서 글을 마치려고 합니다.</p>\n\n<p>첫째, 모폴로지 변환은 커널의 크기나 구조 요소의 모양에 따라 결과값이 크게 달라집니다. 이때 <strong>변수의 이름에 해당 구조요소가 가진 특성을 표시하거나 매개변수의 할당을 변수 값으로 대체</strong>한다면 좀 더 유동적인 함수나 읽기 쉬운 코드로 구현할 수 있습니다.</p>\n\n<p>둘째, 커널의 크기가 짝수일 경우, 원본 이미지와 약간 틀어진 이미지로 반환됩니다. 이는 고정점의 크기를 중심점에 할당할 수 없어서 발생하는 문제인데요, <strong>특별한 경우 혹은 틀어진 이미지를 보정하는 후처리 과정이 없다면 가능한 홀수의 커널 크기를 사용</strong>하시길 바랍니다.</p>\n\n<p>또한, 모폴로지 열림 연산이나 닫힘 연산은 팽창과 침식 연산을 활용한 연산임을 기억해야 합니다. 즉, 열림 연산을 10회 반복하게 구성한 결과와 반복문을 통해 침식 연산과 팽창 연산을 10회 적용한 결과는 서로 다르다는 의미인데요. 열림 연산의 수식은 dilate(erode(src))입니다. 그러므로 열림 연산을 10회 적용한 의미는 침식, 침식, 침식, … 팽창, 팽창, 팽창입니다. (닫힘 연산도 동일) 단, 1회 연산의 경우 동일한 결과를 얻어냅니다. 쉬운 개념이지만 가끔 헷갈릴 수 있으니 주의해서 활용하신다면 좋을 것 같습니다.</p>\n"
    } ,
  
    {
      "title"    : "[이론편] 플랫폼, 알고 개발하자",
      "category" : "",
      "tags"     : "platform",
      "url"      : "/tech/2019/04/02/Platform.html",
      "date"     : "2019-04-02 08:43:59 +0000",
      "content"   : "<p>어느 날 갑자기 “플랫폼 좀 만들어보라며” 위에서 오더를 받은 경험 있지 않으신가요. 일단 만들라고 하니 개발에는 착수했는데, ‘플랫폼’을 한 마디로 정의하기 힘든 개발자들이 태반일 겁니다.<br /></p>\n\n<p>“더도 말고 덜도 말고 이정도만 알면 되겠다” 싶은 플랫폼 지식만 간추려 보았습니다. “아 내가 만들고 있는 플랫폼이 이렇게 돌아가는 놈이구나” 대충 감 정도는 얻으실 수 있을 겁니다. 대부분의 내용은 플랫폼 바이블이라고 불리는 ‘플랫폼 레볼루션(Platform Revolution)’ 책을 참고해 큐레이팅 했는데요. (페이지는 500쪽이지만..) 여력이 되시는 분들은 한번쯤 정독해보실 것을 권합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"br----\">#1<br /><strong>플랫폼, 기술과 만나 날개를 달다</strong></h3>\n\n<p>플랫폼은 사실 아주 오래전부터 인류가 실행해 온 개념입니다. 하루아침에 벼락스타가 된 건 아니죠. ‘생산자와 소비자가 모여 상호작용할 수 있는 공간을 만들어 서로를 위한 가치를 창출하게 하자는 것’이 플랫폼의 기본 정의입니다. 매우 간단하죠. 상인들이 자기들의 물건을 가져와서 지역 소비자들에게 파는 전통적인 노천시장을 떠올려보면 플랫폼의 의미를 좀 더 직관적으로 이해할 수 있습니다.</p>\n\n<p>오랫동안 우리와 함께해 온 플랫폼에 그야말로 ‘붐’이 일게 된 이유는 바로 ‘디지털 기술’ 때문입니다. 기술은 플랫폼에서 <strong>참여자들이 만날 수 있는 인프라를 만들어 주고요</strong>, 종종 전혀 예측할 수 없는 방식으로 <strong>플랫폼의 범위, 속도, 편의성, 효율성을 크게 확대</strong>시키기도 합니다. 어떤 제품이나 서비스든 가치를 더하기 위해 기술과 데이터를 활용할 수 있다면 성공적인 플랫폼을 만들 수 있는 잠재력을 지니고 있다고 할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"br---vs---\">#2<br /><strong>직선적이고 간결한 ‘파이프라인’ vs 복잡하고 다면적인 ‘플랫폼’</strong></h3>\n\n<p>이리보고 저리봐도 플랫폼만 있는 세상에 살고 있는 것 같지만 세상에는 플랫폼이 아닌 기업도 많습니다. 대부분의 기업들이 채택하고 있는 전통적인 시스템을 우리는 ‘파이프라인(pipeline)’이라고 부릅니다. 플랫폼과 달리 <strong>파이프라인은 가치의 창출과 이동이 단계적으로</strong> 일어나는데요. 이때 파이프라인의 한쪽 끝에는 생산자가, 반대편 끝에는 소비자가 있습니다. 회사는 먼저 제품이나 서비스를 디자인하고요. 그런 다음 제품을 제조해서 판매하거나 서비스를 제공하기 위한 시스템을 작동시킵니다. 매우 간결하고 단선적인 형태죠.</p>\n\n<p>반면 플랫폼 세계에서는 다른 종류의 이용자들이 서로 만나고 상호작용을 일으키면서 플랫폼이 제공하는 자원을 사용합니다. 이런 과정에서 가치 있는 무언가를 교환하고 소비하며 때로는 함께 만들어 내기도 하는데요. 가치는 생산자에서 소비자까지 일직선으로 흘러가지 않고, 사람들에 의해 다양한 장소에서 다양한 방식으로 만들어지고 변경되며 교환되고 소비됩니다.</p>\n\n<figure>\n    <img data-action=\"zoom\" src=\"/assets/4_platform/2 pipeline and platform.png\" alt=\"pipeline and platform\" />\n    <figcaption><center><a href=\"https://medium.com/@wasan.makhlouf/pipeline-vs-platforms-e8540663c916\" target=\"_blank\" style=\"color: #0366d6;\"> Pipeline vs. Platforms </a></center>\n    </figcaption>\n</figure>\n\n<p>플랫폼과 파이프라인은 각기 장단점이 있기 때문에 어느 것이 좋거나 나쁘다고 단언할 수는 없습니다. 다만 플랫폼은 성장 측면에서 파이프라인 사업보다 빠르게 클 수 있는 두 가지 경제적 우위를 지니고 있는데요. <strong>한계수익과 한계비용의 우위</strong> 그리고 <strong>확장성의 우위</strong> 입니다.</p>\n\n<p>힐튼과 쉐라톤과 같은 전통적인 호텔 기업이 사업을 확장하려면 객실을 늘리고 수천 명의 직원을 고용해야 하는데 비해 에어비앤비는 거의 <strong>0에 가까운 한계비용으로 사업을 확장</strong>합니다. 에어비앤비 네트워크에 방을 추가하는 데 드는 비용이 아주 적기 때문입니다. 이것이 바로 ‘생산과 유통의 한계수익과 한계비용의 우위’ 입니다.</p>\n\n<p>‘확장성의 우위’는 네트워크 효과와 연결되는데요. 플랫폼에 긍정적인 네트워크 효과가 나타나기 시작하면 생산 증가 ⇢ 소비 증가 ⇢ 다시 생산 증가로 이어집니다. <strong>선순환적 피드백 사이클이 시작되면 최소한의 비용으로 플랫폼 성장에 가속이 붙게 되죠</strong>. 이렇게 구축한 생태계는 대부분의 파이프라인 기반 조직들보다 훨씬 크며, 훨씬 더 많은 자원을 이용할 수 있습니다. 당연 플랫폼 생태계에서 창출되는 가치도 클 수밖에 없겠죠.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"br-----\">#3<br /><strong>망하고 흥하는 플랫폼을 가르는 ‘네트워크 효과’</strong></h3>\n\n<p>직접 생산이나 제조를 하지 않음에도 불구하고 플랫폼 기업들이 꾸준히 성장하고 이익을 창출할 수 있는 핵심 원리는 ‘규모의 수요 경제(demand economics of scale)’ 때문입니다. 규모의 생산량 증가를 통해 제품의 단위 생산 비용을 낮추는 ‘규모의 공급 경제(supply economies of scale)’ 와는 다르죠.</p>\n\n<p>규모의 수요 경제는 소셜 네트워크의 효율성, 수요 결집, 앱 개발, 기타 네트워크가 크면 클수록 사용자들에게 더 많은 가치를 주는 현상에 따라 움직입니다. 즉, <strong>플랫폼의 가치는 이들의 플랫폼에서 활동하는 커뮤니티에서 나오는 것인데요</strong>. 규모의 수요 경제는 한 플랫폼 시장에서 가장 몸집이 큰 기업에게 네트워크 효과 우위를 제공하기도 합니다.</p>\n\n<p><strong>네트워크 효과(network effects)는 여러 플랫폼 사용자들이 각 사용자를 위해 창출한 가격에 미치는 영향력</strong>을 말합니다. 네트워크 효과는 사용자 기반을 키우는 피드백 고리를 스스로 강화시켜 플랫폼을 더욱 매력적으로 만들어 줍니다. 플랫폼의 생산자가 창출하는 가치가 높으면 높을수록 더 많은 소비자를 끌어들일 수 있으며, 또 소비자가 많으면 많을수록 더 많은 생산자가 몰려와서 더 많은 가치를 창출할 수 있게 됩니다.</p>\n\n<figure>\n    <img data-action=\"zoom\" src=\"/assets/4_platform/3 sacksnapkin.png\" alt=\"3 sacksnapkin\" />\n    <figcaption><center><a href=\"https://otherspecify.com/2017/02/02/david-sacks-famous-napkin-sketch-for-econ-101/\" target=\"_blank\" style=\"color: #0366d6;\"> 우버의 선순환에 대한 데이비드 삭스(David Sack)의 냅킨 스케치 </a></center>\n    </figcaption>\n</figure>\n\n<p>대다수의 기업들이 이러한 네트워크 효과의 중요성은 인지하고 있으나 종종 네트워크 효과 관련해 잘못된 접근을 하기도 하는데요. 많은 참여자를 확보하면 네트워크 효과가 일어날 것이라고 생각하는 것입니다. 초기 유저를 확보하기 위해 할인과 쿠폰으로 고객을 끌어오거나 큰 비용을 들여 브랜드 인지도를 구축하죠. 하지만 이 모든 것들은 그리 오래가지 않습니다. <strong>플랫폼 안에 있는 사람들 사이에서 ‘가치’를 늘릴 때에만 영구적인 사용자 네트워크를 구축할 수 있습니다</strong>.</p>\n\n<p>네트워크 효과는 무조건 긍정적일 것이란 생각도 흔한 오류 중 하나입니다. 부정적인 네트워크 효과도 존재합니다. 잘 관리되고 있는 대형 플랫폼 커뮤니티가 각 플랫폼 사용자를 위해 상당한 가치를 생산해 낼 때를 ‘긍정적인 네트워크 효과’라 한다면 반대로 형편없이 관리되는 플랫폼 커뮤니티가 각 플랫폼 사용자를 위해 창출하는 가치를 떨어뜨리는 경우를 ‘부정적인 네트워크 효과’라고 하죠.</p>\n\n<p>부정적인 네트워크는 최소화하고 긍정적인 네트워크 효과는 극대화하려면 적어도 두 가지 조건은 충족시켜야 합니다. \n첫째, 사용자가 플랫폼에 빠르고 쉽게 들어와 가치 창출 활동에 참여할 수 있도록 <strong>진입이 자유로워야 합니다</strong>. 그러나 양적 성장으로 인해 생산자와 소비자 간에 가능한 매칭의 수가 늘어나면, 최적의 매칭을 찾기가 어려워지거나 아예 불가능해지기도 하며 심하면 네트워크 붕괴의 원인이 될 수도 있습니다. 그렇기 때문에 <strong>플랫폼이 사용자들의 접근과 이들이 참여하는 활동, 그리고 다른 사용자들과 맺는 관계를 필터링하고 통제하고 제한하는 프로세스를 잘 관리해 균형을 유지</strong>해야 합니다.\n둘째, 반드시 <strong>양쪽 시장이 동일한 비율로 성장</strong>해야 합니다. 예를 들어 우버는 운전자와 승객이, 에어비앤비는 호스트와 게스트가 모두 늘어나야 합니다. 승객이 한 명인데 운전자가 1000명이거나 호스트가 1000명인데 게스트가 1명인 것은 아무런 의미가 없겠죠.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"br-------\">#4<br /><strong>플랫폼 설계는 ‘핵심 상호작용’을 명확하게 설정하는 것부터 시작된다</strong></h3>\n<p>성공적인 플랫폼은 사용자들을 위해 지속적으로 높은 가치를 만들어 내는 단 하나의 ‘핵심 상호작용(core interaction)’에서 시작합니다. 핵심 상호작용에는 ‘참여자(participants)’, 플랫폼 사용자들이 주고받는 아이템을 일컫는 ‘가치 단위(value unit)’, 사용자들이 적절한 가치 단위를 교환할 수 있도록 해주는 알고리즘 형태의 소프트웨어 기반 도구 ‘필터(filter)’ 등 3가지 핵심 요소가 수반됩니다. 이 3가지 요소는 반드시 명확하게 정의해야 하며, 사용자들이 핵심 상호작용을 최대한 간편하고 매력적이며 가치 있게 느낄 수 있도록 신중하게 설계해야 합니다. <strong>일부 플랫폼은 더 복잡한 모델을 갖고 있지만 ‘참여자+가치 단위+필터 ⇢ 핵심 상호작용’ 이라는 기본 구조는 동일하다</strong>고 보면 됩니다.</p>\n\n<figure>\n    <img data-action=\"zoom\" src=\"/assets/4_platform/4 core interactions factor.png\" alt=\"4 core interactions factor\" />\n</figure>\n\n<p>핵심 상호작용의 요소를 명확하게 정의했다면, <strong>끌어오기(pull), 촉진하기(facilitate), 매칭하기(match) 기능을 통해 가치 있는 핵심 상호작용이 많이 일어나게 해야 합니다</strong>. 먼저 플랫폼은 반드시 생산자와 소비자를 플랫폼으로 데려와야 합니다(끌어오기). 그래야만 생산자와 소비자들이 상호작용할 수 있습니다. 플랫폼은 생산자와 소비자의 상호작용을 촉진해야 합니다. 그러려면 이들이 쉽게 만나서 가치를 교환할 수 있도록 도구와 규칙을 제시해야 합니다(촉진하기). 그리고 플랫폼은 효과적으로 생산자와 소비자들을 짝지어 줘야 합니다. 이때 서로에 대한 정보를 이용하여 각자 원하는 것들을 얻는 방향으로 맺어줘야 합니다(매칭하기).</p>\n\n<p>참여자를 끌어오는 데 실패한 플랫폼은 플랫폼의 가치를 드높여 줄 네트워크 효과를 일으킬 수 없습니다. 상호작용을 촉진시키지 못하는 플랫폼은 결국 참여자들의 의욕을 꺾어 이들을 플랫폼에서 멀어지게 합니다. 그리고 참여자들을 제대로 매칭시키지 못한 플랫폼은 참여자들의 시간과 에너지를 빼앗게 되고, 곧 이들은 플랫폼에서 이탈할 것입니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"br--------\">#5<br /><strong>어디까지 열어 놓고 어디부터 닫아야 하는가, 개방과 폐쇄 사이</strong></h3>\n<p>플랫폼이 주는 가치의 특별한 힘은 외부 참여자들을 연결시키는 역량에 있습니다. 그러나 누가 플랫폼에 접근해야 하는지, 또 어떻게 참여해야 하는지를 결정하는 것은 매우 복잡하고 어려운 문제일 수 있습니다. 바로 이런 점 때문에 <strong>모든 플랫폼 관리자들은 설계 프로세스 초기는 물론 플랫폼 전 생애 주기에 걸쳐 개방과 폐쇄 사이에 있는 플랫폼의 경계를 끊임없이 모니터링해야</strong> 합니다.</p>\n\n<p>플랫폼의 ‘개방성’은 (1)플랫폼의 개발이나 상업화 또는 사용에 참여하는 데 아무런 제약이 없거나 (2)기술 표준 준수 요건, 라이선스 요금 지급 제약 등 어떤 제약이 합리적이면서도 차별 없이 모든 잠재적 플랫폼 참여자들에게 균등하게 적용되는 것을 의미합니다. \n반면 ‘폐쇄성’은 단순히 외부 참여자들의 플랫폼 참여를 금하는 것이 아니라 잠재적 이용자들이 참여를 망설일 정도로 부담이 되는 참여 규칙을 만들거나, 과도한 수수료(또는 ‘사용료’) 부과로 잠재적 참여자의 이윤 폭을 견딜 만한 수준 이하로 떨어뜨리는 것을 말합니다.</p>\n\n<p>플랫폼의 개방성을 결정할 때는 관리자와 스폰서 참여, 개발자 참여, 사용자 참여 등 3가지 유형의 이슈를 두루 고민해야 하는데요. 여기서는 개발자 참여에 대한 내용만 중점적으로 보려고 합니다. 플랫폼 설계와 구축은 일반적으로 핵심 상호작용에서 시작됩니다. 그러나 시간이 흐르면서 대다수의 플랫폼은 사용자들을 위한 추가 가치를 창출하고 새로운 참여자들을 끌어들이는 다른 유형의 상호작용을 일으키기 위해 확장합니다. 새로운 상호작용은 플랫폼과 그것을 구성하는 인프라에 접근할 수 있는 개발자들이 만들어 냅니다. 이때 개발자는 크게 세 유형으로 나눌 수 있습니다.</p>\n\n<p><strong>핵심 개발자(core developer)</strong><br />\n플랫폼 참가자들에게 가치를 제공하는 가장 기본적인 기능을 책임집니다. 시스템을 설계하고 미세 조정하며 유지 보수하고 지속적으로 개선하는 것이 전반적인 업무 요소죠.</p>\n\n<p><strong>확장 개발자(extension developers)</strong><br />\n플랫폼에 세부적인 기능과 가치를 더해 가며 기능을 향상시킵니다. 보통 외부 당사자들로 우리에게 익숙한 확장 개발자 그룹에는 게임, 정보 도구, 생산성 도구, 활동 편의성을 높이는 앱을 생산하여 아이튠스 스토어를 통해 판매하는 개인과 기업이 있습니다.</p>\n\n<p>플랫폼 관리자들은 반드시 확장 개발자들에게 플랫폼을 어느 수준까지 개방할 것인가 하는 문제를 정해야 합니다. 만일 플랫폼이 너무 폐쇄적이면 – 확장 개발자들이 자신들이 개발한 것을 사이트에서 팔기가 지나치게 어려우면 – 플랫폼 사용자들에게 소중한 부가 서비스를 제공할 기회를 잃게 될 것입니다. 어쩌면 그런 과정에서 참여자들을 소외시킬 수도 있습니다. 그러나 플랫폼이 지나치게 개방적이면 – 확장 개발자들이 사이트에 출현하기 너무 쉽다면 – 저급한 서비스 제공자들이 플랫폼에 등장하여 해당 브랜드의 평판은 물론 다른 개발자들의 평판까지 깎아내릴 것입니다. 게다가 과도한 개방성은 동종의 서비스 제공자들을 지나치게 많이 끌어들일 수 있고, 그렇게 되면 한 제공업체가 벌어들이는 수익이 줄어들게 되어 사용자들의 요구에 맞춰 서비스를 개선하거나 바꾸는 데 따르는 인센티브가 줄어들겠죠.</p>\n\n<p>확장 개발자들에게 높은 수준의 개방성을 허용하는 플랫폼 기업들은 보통 응용 프로그래밍 인터페이스(API)를 제공합니다. <strong>API는 소프트웨어 응용프로그램 개발을 위해 표준화된 절차와 방법, 규약, 도구로 외부 개발자들이 플랫폼 인프라와 깔끔하게 연결되는 프로그램을 코딩하기 쉽게 만들어 줍니다</strong>. 확장 개발자들을 끌어들인 API의 위력은 아마존을 통해 알 수 있습니다. 아마존은 33개에 달하는 오픈 API뿐만 아니라 300개 이상의 API ‘매시업’(mashups, 두 개 이상의 API를 조합한 것)을 보유하고 있으며, 이 API들은 전자 상거래, 클라우드 컴퓨팅, 메시징, 검색 엔진 최적화, 지급 결제 등을 가능하게 해 줍니다.</p>\n\n<figure>\n    <img data-action=\"zoom\" src=\"/assets/4_platform/5 urbanbase api.png\" alt=\"5 urbanbase api\" />\n    <figcaption><center><a href=\"https://developer.urbanbase.com/docs/lens/APIREFERENCE.html\" target=\"_blank\" style=\"color: #0366d6;\"> API Reference </a></center>\n    </figcaption>\n</figure>\n\n<p><strong>데이터 애그리게이터(data aggregators)</strong><br /> \n다양한 정보원으로부터 얻은 데이터를 가지고 플랫폼의 매칭 기능을 향상시키는 역할을 합니다. 데이터 애그리게이터들은 플랫폼 관리자로부터 허가를 얻어 플랫폼 사용자들과 이들이 참여한 상호작용에 대한 데이터를 모조리 빨아드립니다. 데이터 애그리게이터들이 제공한 서비스가 잘 설계되어 있으면 사용자들이 흥미를 가질 만하고 잠재적으로 가치를 더할 수 있을 것 같은 상품과 서비스를 제공하는 생산자를 플랫폼 사용자들과 연결해 줄 수 있습니다.</p>\n\n<p>그렇다면, ‘무엇을 열어 놓고 무엇을 소유할 것인가’에 대한 의문점이 생길 수밖에 없을 텐데요. 이 질문에 대한 답은 ‘특정 확장 앱이 만들어 내는 가치의 양’에 달려 있습니다. 자신의 플랫폼 사용자들이 누리는 가치의 주된 원천을 외부 기업의 통제 아래 두고 싶은 회사는 없을테니까요. 반면 확장 앱이 창출하는 부가 가치가 그리 크지 않다면 안심해도 됩니다. 이때는 외부 개발자가 앱을 통제하도록 놔두는 게 오히려 효율적인 경우가 많습니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"br---\">#6<br /><strong>돈 버는 방법도 가지가지</strong></h3>\n<p>수익 창출은 매우 복잡하면서도 플랫폼의 생존을 결정하는 중요한 문제입니다. 성공적인 플랫폼 출시를 바란다면 수익 창출을 둘러싼 여러 사안들을 무시하거나 네트워크 효과가 무르익을 때까지 미루어 두지 말고 <strong>첫날부터 잠재적인 수익 창출 전략에 대해 고민해야 하며, 또 다른 수익 창출 방안을 계속해서 강구해 놓아야 합니다</strong>. 셀 수 없이 많은 플랫폼이 있듯 각각의 플랫폼마다 수익을 창출하는 방법도 다양할텐데요. 플랫폼 세계에서 돈 버는 방법, 대표적인 4가지 모델을 소개합니다.</p>\n\n<p><strong>거래 수수료 부과</strong><br />\n네트워크 효과의 증가를 방해하지 않으면서 플랫폼에서 창출된 가치를 통해 수익을 얻을 수 있는 강력한 방법입니다. <strong>구매자와 판매자들은 실제 거래가 발생했을 때에만 돈을 내면 되므로, 두 참여자들이 플랫폼과 네트워크에 진입하는 데 방해되지 않습니다</strong>. 물론 거래 수수료가 너무 과하면 거래 자체가 주춤할 수 있지만요. 플랫폼 관리자들은 사용자가 이탈하지 않는 수준에서 다양한 수준의 수수료를 놓고 실험하면서 생성된 가치의 몇 퍼센트가 적정한지 찾아야 합니다.</p>\n\n<p><strong>커뮤니티 접근에 대한 수수료 부과</strong><br />\n<strong>생산자에게 사용자 커뮤니티에 대한 접근을 대가로 수수료를 부과하여 수익을 창출</strong>하는 것이 가능합니다. 이때 사용자들은 생산자와 상호작용하기 위해서가 아니라 다른 이유로 플랫폼에 가입하는데요. 디자이너 플랫폼 드리블, 인력 채용 플랫폼 링크드인 등이 채용 담당자들로 하여금 구직자들을 비교하여 원하는 사람을 찾을 수 있게 해주는 것을 일례로 들 수 있습니다.</p>\n\n<p><strong>접근성 강화에 따른 수수료 부과</strong><br />\n금전 거래를 용이하게 하는 플랫폼이 거래 자체에 직접 관여할 수 없으면 거기에서 수익을 창출하지 못할 수도 있습니다. 대신에 이런 플랫폼은 <strong>생산자들로부터 수수료를 받고 소비자를 더 많이 만나게 해 줄 수 있습니다</strong>. 소비자에 대한 접근성을 강화하는 것이죠. 경쟁자가 너무 많아 소비자들의 관심을 놓고 벌이는 다툼이 치열해지더라도 생산자가 플랫폼 양면에서 주목을 끌며 다른 상대들보다 돋보이게 해줄 수 있는 도구를 제공하는 것입니다. 타깃 메시지를 더 정교하게 하거나 더 눈길을 끄는 프리젠테이션을 만드는 것, 특히 더 중요한 사용자들과의 상호작용을 제공하는 대가로 생산자들에게서 수수료를 받는 세부 방법들이 있습니다.</p>\n\n<p><strong>큐레이션 강화에 수수료 부과</strong><br />\n긍정적인 네트워크 효과는 단순히 양적인 면뿐 아니라 질적인 면에 의해서도 생성됩니다. 플랫폼에 콘텐츠 양이 너무 많아지면 소비자들이 원하는 양질의 콘텐츠를 찾기 어려워지고, 이로 인해 소비자들은 플랫폼의 가치가 점점 떨어진다고 느끼게 됩니다. 이럴 때 <strong>소비자는 품질 보장, 즉 큐레이션 강화에 대해 기꺼이 비용을 지불하려 할 것</strong>입니다.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"br------1\">#7<br /><strong>시작하는 플랫폼을 위한 핵심 성과지표 원.투.쓰리</strong></h3>\n<p>스타트업 단계에 있는 신생 플랫폼 기업들은 플랫폼에서 핵심 상호작용을 가능케 하는 특징이 얼마나 강한지를 추적하는 지표에 집중해야 합니다. 글로벌 프리랜서 플랫폼인 오데스크(ODesk, 현재의 업워크)의 전 CEO 게리 스와트(Gary Swart)는 스타트업 초기에 초점이 잘 맞춰진 지표가 매우 중요하다고 아래와 같이 말하기도 했는데요.</p>\n\n<p><em style=\"     font-size: 13px; \">“비즈니스 리더는 회사의 가장 중요한 지표가 무엇인지 파악할 수 있어야 하고, 더 많이 측정하려 할수록 우선순위 결정이 힘들어진다는 사실을 알아야 한다. 모든 것을 측정해야 한다는 함정에 빠지지 말라. 사업 초기에 내가 얻은 교훈은 우리 제품을 좋아하고 사용하는 고객이 가장 중요하다는 사실이다. 여기에 도움이 될 만한 한 두개의 지표가 무엇인지 파악하라.”</em></p>\n\n<p>신생 플랫폼의 상태를 파악하기 위한 핵심 지표들로는 유동성, 매칭 품질, 신뢰도 점검 등이 있습니다. 플랫폼 특징에 따라 특화된 측정 도구가 추가로 필요할 수는 있지만 이 세가지 지표 없이 신생 플랫폼의 성과를 측정하기는 힘듭니다.</p>\n\n<p><strong>유동성(liquidity)</strong><br />\n플랫폼의 생명 주기에서 가장 중요한 첫 번째 이정표로 <strong>최소한의 생산자와 소비자가 존재하고 성공적인 상호작용 비율이 높은 상태를 의미</strong>합니다. 유동성에 도달하면 상호작용이 실패하는 경우가 최소화되고, 원하는 사용자들이 적정 시간 안에 일관되게 상호작용할 수 있습니다. <strong>플랫폼이 출시되고 처음 몇 달 동안 언제 유동성에 도달할 것인지를 예측</strong>해 주어야 합니다.</p>\n\n<p><strong>유동성을 측정하는 한 가지 합리적인 방법은 주어진 기간 안에 상호작용으로 이어지는 회원 비율을 추적하는 것</strong>입니다. 물론 ‘상호작용’과 적절한 기간이 무엇인지는 플랫폼이 속한 시장의 범주에 따라 달라질 것입니다. 정보 및 엔터테인먼트 플랫폼에서 상호작용은 소비자가 헤드라인을 클릭해서 본문을 읽는 것을 의미할 것이며, 쇼핑 플랫폼에서는 제품의 구매를, 전문가 네트워킹 플랫폼에서는 서로를 추천하거나 연락처 교환, 토론 페이지에서 질문에 답을 다는 행위를 상호작용으로 정의할 수 있습니다.</p>\n\n<p><strong>부정적인 측면에서는 유동성이 떨어지는 상황이 얼마나 자주 발생하는지 알아보고 추적하는 것이 중요</strong>한데요. 유동성이 떨어진다는 것은 원하던 거래가 불가능한 상황을 발견한 상태를 말합니다. 유동성이 부족하면 사용자들은 플랫폼에 참여하는 것을 주저하게 되므로 이런 상황은 최대한 줄여야 합니다. 명심할 것은 <strong>플랫폼 채택을 결정하는 핵심 지표가 회원 가입이 아니라 사용자 관여도와 활발한 플랫폼 이용이라는 사실</strong>입니다. 그렇기 때문에 유동성을 정의할 때 사용자 합계와 상호작용 발생 건수를 반드시 포함시켜야 합니다.</p>\n\n<p><strong>매칭 품질(matching quality)</strong><br />\n<strong>검색 알고리즘의 정확성과 탐색 도구의 직관성</strong>을 의미합니다. 이런 도구들은 <strong>사용자들이 가치가 창출되는 상호작용에 함께 참여할 다른 사용자를 찾는 데에 도움을 줍니다</strong>. 매칭 품질은 가치를 실현하고 장기적으로 플랫폼이 성공적으로 성장하는 데 있어서 매우 중요하며 <strong>우수한 제품이나 서비스 큐레이션을 통해 확보</strong>할 수 있습니다.</p>\n\n<p>일반적으로 사용자는 자기들이 찾는 것을 최대한 빨리 구하고 싶은 마음으로 플랫폼에 참여합니다. 원하는 것을 정확히 찾을 수 있으면 사용자들은 원하는 것을 찾는 데 들어가는 시간과 에너지, 노력, 기타 자원 등을 줄일 수 있습니다. 따라서 플랫폼이 사용자들을 신속하고 정확하게 이어줄수록 일반 사용자들이 활성 사용자나 장기 회원이 될 가능성이 높아지겠죠.</p>\n\n<p>반대로 매칭 품질이 나쁜 데다 매칭 속도도 느리고 결과가 실망스러우면 사용자 수와 상호작용 빈도가 크게 감소합니다. 그러면 결국 플랫폼은 조기에 소멸하게 될텐데요. 모든 종류의 플랫폼에 적용할 수 있는, 매칭 품질이 ‘나쁘다’ 혹은 ‘좋다’의 정확한 기준은 없습니다. 그러나 플랫폼 관리자는 특정 사용자들의 상호작용 비율과 해당 사용자들의 장기적인 활동 비율, 이를 테면 한 달에서 석 달이라는 기간 동안의 활동 비율과의 상관관계를 토대로 경험 법칙을 도출할 수 있습니다.</p>\n\n<p><strong>신뢰(trust)</strong><br />\n<strong>플랫폼 사용자가 상호작용에 참여하는 것과 관련해서 느끼는 리스크 수준</strong>입니다. 신뢰는 플랫폼 참여자들을 제대로 걸러 내고 관리할 수 있을 때 생깁니다. 온라인 플랫폼 세계에서는 처음에 사용자들끼리 맺는 관계를 비롯하여 대다수의 상호작용이 전적으로 사이버 공간에서 벌어지기 때문에 리스크에 대한 인지도가 더욱 큰 편인데요. <strong>잘 운영되고 있는 플랫폼은 양쪽 참여자들이 잘 관리되어 사용자들이 플랫폼에서 일어나는 상호작용에 개입하는데 따른 리스크 수준을 편안하게 받아들일 수 있어야 합니다</strong>.</p>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"section\">#.</h3>\n<p>플랫폼이 돌아가는 원리를 알고 나니 많은 기업들이 플랫폼이 되기를 원하지만 왜 아무나 페이스북이 될수 없고, 우버가 될 수 없었는지 이해가 갑니다. 유저의 수가 성공적인 플랫폼이 되기 위한 충분조건인 줄 알았는데 그게 다가 아니었어요. 생각보다 정교하고 복잡한 프로세스로 플랫폼은 운영되고 있었네요.</p>\n\n<p>저희 또한 아직 갈길이 구만리인데요. 계속해서 고민하고 답을 찾다보면 언젠가 어반베이스 안에서 전 세계 모든 도면을 3D로 경험할 수 있는 날이 오겠죠. 다음 [실전편] 에서는 어반베이스가 플랫폼 기업으로 도약하기 위해 첫 단추를 어떻게 끼웠는지, 플랫폼 ‘아키텍처’ 중심으로 실제 개발기를 전합니다.</p>\n\n"
    } ,
  
    {
      "title"    : "공간분석 AI 서비스 Taker",
      "category" : "",
      "tags"     : "taker, urbanbase, urbanbasespace, ComputerVision, cnn, and deeplearning",
      "url"      : "/2019/03/13/Taker.html",
      "date"     : "2019-03-13 16:00:00 +0000",
      "content"   : "<h1 id=\"taker-api-engine\">Taker (API, Engine)</h1>\n\n<p><code class=\"highlighter-rouge\">Taker</code>는 공간분석 AI 서비스로 특정 공간의 스냅샷을 <strong>Computer Vision</strong>과 <strong>CNN(Convolutional Neural Network)</strong> 기반 <strong>Deep Learning</strong> 기술을 이용하여 분석합니다. 공간에 위치한 다양한 사물을 빠르게 <strong>인식</strong>하고, 인식된 사물들을 바탕으로 어반베이스의 <code class=\"highlighter-rouge\">Space</code> 알고리즘 기반으로 이미지를 거실/방/주방/욕실 등 공간 중 하나로 <strong>분류</strong>합니다.</p>\n\n<p>인식된 사물과 공간분류 정보를 통해 공간에 어울리는 소품, 가구, 전자제품 등을 추천하는데 활용할 수 있습니다. 페르소나 분석이나 취향분석(연령대,성별,성향)이 가능하도록 발전시키고 있습니다.</p>\n\n<p><br /></p>\n\n<ul>\n  <li>Note\n    <ul>\n      <li><strong>Computer Vision</strong>과 <strong>Deep Learning</strong> 전문 지식이 필요 없으며, 사용하기 쉬운 API를 통해 강력한 공간 이미지 분석 서비스를 <strong>웹, 모바일, 애플리케이션 등에 추가</strong> 할 수 있습니다.</li>\n      <li><strong>User Data</strong>를 이용해서 <strong>Retraining</strong>하는 프로세스를 통해 엄청난 양의 새로운 데이터를 끊임없이 학습하여 정확도를 개선합니다.</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h2 id=\"taker--\">Taker 기능 소개</h2>\n\n<h3 id=\"section\">공간 분류</h3>\n\n<p>약 80,000장의 공간 이미지와 생성모델(GAN,Generative Model)을 통해 다각도로 학습을 완료. 약 96%의 정확도를 보여주고 있습니다.</p>\n\n<p>공간 분류는 공간 이미지를 분석하여 <code class=\"highlighter-rouge\">Space</code> 알고리즘을 통해 거실/방/주방/욕실 등의 공간 중 확률이 높은 순으로 분류하여 반환합니다.</p>\n\n<p><a href=\"/assets/tech(demo)/5. Taker_Classify.png\"><img src=\"/assets/tech(demo)/5. Taker_Classify.png\" alt=\"taker_classify\" /></a></p>\n\n<p><br /></p>\n\n<h3 id=\"section-1\">사물 인식</h3>\n\n<p>Object Detection 기술은 Faster-RCNN에 기반하고 있으며, 정확도와 속도를 모두 대응하기 위해 추가 알고리즘을 확대 적용할 예정입니다.</p>\n\n<p>사물 인식은 공간 이미지 내에 존재하는 가구, 전자제품, 인테리어 소품 등의 위치와 종류를 반환합니다.</p>\n\n<p><a href=\"/assets/tech(demo)/5. Taker_Detect.png\"><img src=\"/assets/tech(demo)/5. Taker_Detect.png\" alt=\"taker_detect\" /></a></p>\n\n<p><br /></p>\n\n<h3 id=\"section-2\">취향 분석</h3>\n\n<p>공간 이미지에 대한 성별, 연령, 주거형태, 스타일 선호도 분석을 통해 사용자의 취향을 예측, e-commerce 뿐만 아니라 다양한 산업군에서 활용 할 수 있습니다.</p>\n\n<p><a href=\"/assets/tech(demo)/5. Taker_preference.png\"><img src=\"/assets/tech(demo)/5. Taker_preference.png\" alt=\"taker_preference\" /></a></p>\n\n<p><br /></p>\n\n<h3 id=\"section-3\">제품 추천</h3>\n\n<p>상품 추천은 공간 분류, 사물 인식, 취향 분석의 결과를 바탕으로 공간에 어울리는 제품을 추천합니다.</p>\n\n<p><a href=\"/assets/tech(demo)/5. Taker_Recommend.png\"><img src=\"/assets/tech(demo)/5. Taker_Recommend.png\" alt=\"taker_recommend\" /></a></p>\n\n<p><br /></p>\n\n<h4> 공간의 사진을 업로드하고, 공간 분석정보를 볼 수 있습니다. Taker를 직접 만나보세요. \n<br />\n<a href=\"https://developer.urbanbase.com/products/space/\" target=\"_blank\" style=\"color: #0366d6;\"> &gt;Taker 경험 하기</a> </h4>\n\n<p><br />\n<br /></p>\n<h2 id=\"taker-machine-learning-process\">Taker Machine Learning Process</h2>\n<p><br />\n<a href=\"/assets/tech(demo)/5. Taker_process.png\"><img src=\"/assets/tech(demo)/5. Taker_process.png\" alt=\"taker_process\" /></a></p>\n\n<p><br />\n<br />\n<br /></p>\n\n<h2 id=\"section-4\">응용분야</h2>\n<h3 id=\"home-interior-curator\">Home Interior Curator</h3>\n<p>개인별 상황에 최적화된 홈 인테리어 제품들을 제안합니다. 홈인테리어 지식이 없는 사용자도 손쉽게 인테리어를 시도해 볼 수 있도록 해줍니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"e-commerce\">e-Commerce</h3>\n<p>최근 대부분의 온라인 쇼핑몰은 상품 추천 엔진을 사용하고 있습니다. <code class=\"highlighter-rouge\">Taker</code>의 상품 추천 알고리즘을 이용해서 소비자가 구매할 확률이 높은 제품군을 추천할 수 있습니다. 또한, 취향 분석 알고리즘을 통해 소비자의 취향이나 트렌드를 예측할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h3 id=\"space-viewer\">Space Viewer</h3>\n<p>어반베이스 <code class=\"highlighter-rouge\">Space Viewer</code>를 통해 추천된 제품을 증강현실(AR)에서 사용자가 원하는 위치에 배치할 수 있습니다. 실제 제품을 배치하지 않아도 그 제품이 공간에 어울리는지 쉽고 간단하게 확인할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<hr />\n\n<p><br />\n<br /></p>\n<h3>\nTaker 기술을 보유한 어반베이스는 3D 공간데이터 플랫폼입니다.\n</h3>\n<p><br /></p>\n<h4>\n전 세계의 모든 공간정보를 하나의 플랫폼 안에서 자유롭게 활용할 수 있도록 도면 변환 기술 및 AR, VR 뷰어 기술이 담긴 API와 SDK를 제공하고 있습니다.<br />\n<br />\n<br />\n\n<br />\n\n\n어반베이스 개발자 사이트 <a href=\"https://developer.urbanbase.com\" target=\"_blank\" style=\"color: #0366d6;\"> 자세히 보기</a>\n</h4>\n<p><br /><br /><br /></p>\n"
    } ,
  
    {
      "title"    : "3D 객체를 AR로 핸들링할 수 있는 AR Viewer",
      "category" : "",
      "tags"     : "ARviewer, urbanbase, and urbanbaselens",
      "url"      : "/2019/03/13/ARviewer.html",
      "date"     : "2019-03-13 16:00:00 +0000",
      "content"   : "<h1 id=\"ar-viewer-library\">AR Viewer (Library)</h1>\n\n<p>구글 ARCore/SceneForm, 애플 ARKit를 기반으로 개발되었으며 바닥/벽면 인식을 통해 증강현실을 쉽게 구현할 수 있습니다.</p>\n\n<p><code class=\"highlighter-rouge\">AR Viewer</code>에는 ARCore/ARKit에서 제공되지 않는 3D객체의 조작(이동,회전,확대), 화면캡쳐, 공유 등의 편리 기능을 추가적으로 제공합니다. 하나의 3D객체를 3D Viewer를 통해 WebVR로, <code class=\"highlighter-rouge\">AR Viewer</code>를 통해 증강현실로 활용이 가능합니다.</p>\n\n<p><br />\n<br /></p>\n\n<h2 id=\"ar-viewer-demo\">AR Viewer Demo</h2>\n<h4>AR Viewer 데모 영상 확인하기</h4>\n<p><strong>이미지를 클릭하면 영상으로 이동합니다.</strong></p>\n\n<p><a href=\"https://youtu.be/-_uafeGlerw\" target=\"_blank\"><img src=\"/assets/tech(demo)/4. AR Viewer.png\" alt=\"ARviewer\" /></a></p>\n\n<p><br />\n<br /></p>\n\n<h2 id=\"section\">기술 설명</h2>\n<p>AR Viewer는 많은 사용자가 다양한 모바일 환경에서 Urbanbase의 3D 핵심 기술과 3D 모델들을 증강현실(Augmented Reality)에서 체험할 수 있게 도와줍니다. 단 몇 줄의 코드로 3D 모델링 파일을 불러올 수 있습니다.</p>\n<ul>\n  <li>특징\n    <ul>\n      <li>OS : Android 7.0 or later</li>\n      <li>지원 단말 : Samsung Galaxy S8, LG G6 or later</li>\n      <li>사용하는 언어 : Android</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"section-1\">프로세스</h3>\n\n<p>Urbanbase에서 제공하는 라이브러리를 사용하면 AR 환경을 쉽게 구축할 수 있습니다.</p>\n\n<h4 id=\"android-library\">Android Library</h4>\n<p><code class=\"highlighter-rouge\">라이브러리 Import 하기</code>, <code class=\"highlighter-rouge\">3D 모델 불러오기</code>, <code class=\"highlighter-rouge\">라이브러리 업데이트 하기</code> 등 자세한 프로세스는 <a href=\"https://developer.urbanbase.com/docs/lens/TUTORIAL.html#android-library\" target=\"_blank\" style=\"color: #0366d6;\"> Android Library</a>에서 확인할 수 있습니다.</p>\n\n<p><br /></p>\n\n<h4 id=\"ios-library\">IOS Library</h4>\n\n<div style=\"width: 100%;height: 100px;font-size:20px;margin:100px 0;text-align: center;color: gray\">Coming Soon</div>\n\n<p><br /></p>\n\n<h3 id=\"api-reference\">API REFERENCE</h3>\n\n<p>AR Viewer의 <a href=\"https://developer.urbanbase.com/docs/lens/APIREFERENCE.html\" target=\"_blank\" style=\"color: #0366d6;\"> API REFERENCE</a>를 확인할 수 있습니다.</p>\n\n<p><br />\n<br /></p>\n\n<hr />\n\n<p><br />\n<br /></p>\n<h3>\nAR Viewer 기술을 보유한 어반베이스는 3D 공간데이터 플랫폼입니다.\n</h3>\n<p><br /></p>\n<h4>\n전 세계의 모든 공간정보를 하나의 플랫폼 안에서 자유롭게 활용할 수 있도록 도면 변환 기술 및 AR, VR 뷰어 기술이 담긴 API와 SDK를 제공하고 있습니다.<br />\n<br />\n<br />\n\n<br />\n\n\n어반베이스 개발자 사이트 <a href=\"https://developer.urbanbase.com\" target=\"_blank\" style=\"color: #0366d6;\"> 자세히 보기</a>\n</h4>\n<p><br /><br /><br /></p>\n"
    } ,
  
    {
      "title"    : "3D 객체들의 렌더링을 담당하는 3D Viewer",
      "category" : "",
      "tags"     : "3Dviewer, urbanbase, urbanbasecore, and crane",
      "url"      : "/2019/03/07/3Dviewer.html",
      "date"     : "2019-03-07 16:00:00 +0000",
      "content"   : "<h1 id=\"d-viewer-sdk-api\">3D Viewer (SDK, API)</h1>\n\n<p><code class=\"highlighter-rouge\">3D Viewer</code>는 Web, HMD, iOS/Android 등에서 3D객체들을 추가 개발없이 손쉽게 렌더링할 수 있는 기능으로 렌더링 품질에 따라 Basic과 Pro로 구분되어 집니다.</p>\n\n<ul>\n  <li>\n    <p><strong>다양한 디바이스 환경 대응</strong></p>\n\n    <p>기존 3D 모델의 다양한 디바이스 대응을 위해 추가적인 개발이 필요했지만, <code class=\"highlighter-rouge\">3D Viewer</code>는 한번의 적용만으로도 다양한 디바이스 대응이 가능합니다.</p>\n  </li>\n  <li>\n    <p><strong>고품질 렌더링</strong></p>\n\n    <p>PBR 적용하여 고퀄리티의 그래픽 구현이 가능하며, 렌더링 품질에 따라 Basic과 Pro로 나뉘어 사용 목적에 따른 최적화가 가능합니다.</p>\n  </li>\n  <li>\n    <p><strong>최적화된 퍼포먼스</strong></p>\n\n    <p>VR/AR 적용시, 고용량 고화질의 3D 모델들을 보다 빠르고 매끄럽게 처리하기 위한 기술들을 끊임없이 연구, 개선해 나가고 있습니다.</p>\n  </li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h2 id=\"d-viewer-demo\">3D Viewer Demo</h2>\n\n<h4> Floor Plan </h4>\n<p><a href=\"/assets/tech(demo)/3. 3D viewer(1).gif\"><img src=\"/assets/tech(demo)/3. 3D viewer(1).gif\" alt=\"3D Viewer\" /></a></p>\n\n<p><br /></p>\n\n<h4> Electronics </h4>\n<p><a href=\"/assets/tech(demo)/3. 3D viewer(2).gif\"><img src=\"/assets/tech(demo)/3. 3D viewer(2).gif\" alt=\"3D Viewer\" /></a>\n<br />\n<br /></p>\n<h4> 3D Viewer를 직접 만나보세요. \n<br />\n<a href=\"https://developer.urbanbase.com/demos/CoreviewDemo.html\" target=\"_blank\" style=\"color: #0366d6;\"> &gt;3D Viewer 경험 하기</a> </h4>\n\n<p><br /></p>\n\n<h2 id=\"crane\">Crane</h2>\n\n<h3 id=\"section\">설명</h3>\n\n<p>Urbanbase Core는 3D 렌더링과 HomeDesign 기능을 제공하는 Unity 기반의 뷰어 입니다. Crane은 웹 기반 플랫폼에서 <strong>Core의 기능들을 사용할 수 있게 해주는 SDK</strong> 입니다. \nCrane을 이용하면 웹 상에서 기본 뷰어 기능 외에 3D도면 위에 소품, 캐릭터 등을 배치하는 HomeDesign 기능을 사용할 수 있습니다. \nCrane은 사용 용도에 따라 4가지 모드(Productive Viewer, Viewer, Editor,  Floor Planner)를 지원합니다.</p>\n\n<p><br /></p>\n\n<table style=\"text-align: left;\">\n    <tbody>\n        <tr style=\"width: 30%;\">\n            <td style=\"width: 30%;\"><h4>모드</h4></td>\n            <td><h4>설명</h4></td>\n        </tr>\n        <tr>\n            <td>Viewer</td>\n            <td>3D 건축물을 볼 수 있습니다.</td>\n        </tr>\n        <tr>\n            <td>Product Viewer</td>\n            <td>3D 제품을 볼 수 있습니다.</td>\n        </tr>\n        <tr>\n            <td>Editor</td>\n            <td>3D 건출물을 로드하고 직접 3D 제품들을 배치해 볼 수 있습니다.</td>\n        </tr>\n        <tr>\n            <td>Floor Planner</td>\n            <td>2D 상에 직접 그린 도면을 3D 건축물로 변환하여 볼 수 있습니다.</td>\n        </tr>\n    </tbody>\n</table>\n\n<p><br /></p>\n\n<h4>\n Crane의 <a href=\"https://developer.urbanbase.com/docs/core/TUTORIAL.html\" target=\"_blank\" style=\"color: #0366d6;\">  프로세스 및 API Reference</a>는 어반베이스 개발자 사이트에서 확인하실 수 있습니다.\n<h4>\n\n\n\n\n<br />\n<br />\n\n<hr />\n<br />\n<br />\n<h3>\n3D Viewer 기술을 보유한 어반베이스는 3D 공간데이터 플랫폼입니다.\n</h3>\n<br />\n<h4>\n전 세계의 모든 공간정보를 하나의 플랫폼 안에서 자유롭게 활용할 수 있도록 도면 변환 기술 및 AR, VR 뷰어 기술이 담긴 API와 SDK를 제공하고 있습니다.<br />\n<br />\n<br />\n\n<br />\n\n\n어반베이스 개발자 사이트 <a href=\"https://developer.urbanbase.com\" target=\"_blank\" style=\"color: #0366d6;\"> 자세히 보기</a>\n</h4>\n<br /><br /><br />\n</h4></h4>\n"
    } ,
  
    {
      "title"    : "3D로 즐기는 가상의 인테리어 3D Home Design",
      "category" : "",
      "tags"     : "3DHomeDesign, urbanbase, urbanbasecore, and crane",
      "url"      : "/2019/03/07/3DHomedesign.html",
      "date"     : "2019-03-07 16:00:00 +0000",
      "content"   : "<h1 id=\"d-home-design-sdk-api\">3D Home Design (SDK, API)</h1>\n\n<p><code class=\"highlighter-rouge\">3D Home Design</code> 기능은 사용자가 직접 매장에 방문하지 않고, 가상공간에서 손쉽게 인테리어를 체험할 수 있습니다.\n어반베이스가 기본적으로 제공하는 약 7000여개의 3D제품을 몇 번의 클릭과 이동만으로 원하는 3D 공간에 배치할 수 있고, 조도조절을 통해 시간에 따른 일조량도 미리 확인할 수 있습니다.</p>\n\n<p>이를 레퍼런스로 인테리어, 건축, 기계설비, 영화, 게임 등 다양한 산업군에서 도입을 검토중에 있습니다.</p>\n\n<ul>\n  <li>\n    <p>다양한 스타일 적용</p>\n\n    <p>7,000개의 3D모델과 550만가구(대한민국)의 데이터를 기반으로 가상공간에서 원하는 스타일로 쉽게 홈디자이닝을 체험할 수 있습니다.</p>\n  </li>\n  <li>\n    <p>자유로운 제품 배치</p>\n\n    <p>3D 제품을 실제와 동일하게 배치 가능하도록 줄자와 면적 계산기, 충돌 방지 기능을 탑재하여 혼자서도 충분히 가구/가전 제품을 배치할 수 있습니다.</p>\n  </li>\n  <li>\n    <p>저비용 고효율</p>\n\n    <p>무거운 가구나 가전을 옮기는 비용과 수고를 들이지 않고도 VR 서비스를 활용하여 제품을 손쉽게 이동, 배치하여 시뮬레이션이 가능 합니다.\n<br />\n<br />\n<br /></p>\n  </li>\n</ul>\n\n<h2 id=\"d-home-design-demo\">3D Home Design Demo</h2>\n<h4>3D Home Design 데모 영상 확인하기</h4>\n\n<p><strong>이미지를 클릭하면 영상으로 이동합니다.</strong></p>\n\n<p><a href=\"https://youtu.be/sHmokPYTp2Q\" target=\"_blank\"><img src=\"/assets/tech(demo)/3. 3D HomeDesign (thumbnail).png\" alt=\"3DHomedesign\" /></a></p>\n\n<p><br />\n<br /></p>\n<h4> 3D Home Design를 직접 만나보세요. \n<br />\n<a href=\"https://urbanbase.com/map\" target=\"_blank\" style=\"color: #0366d6;\"> &gt;3D Home Design 경험 하기</a> </h4>\n\n<p><br />\n<br /></p>\n\n<h2 id=\"crane\">Crane</h2>\n\n<h3 id=\"section\">설명</h3>\n\n<p>Urbanbase Core는 3D 렌더링과 HomeDesign 기능을 제공하는 Unity 기반의 뷰어 입니다. Crane은 웹 기반 플랫폼에서 <strong>Core의 기능들을 사용할 수 있게 해주는 SDK</strong> 입니다. \nCrane을 이용하면 웹 상에서 기본 뷰어 기능 외에 3D도면 위에 소품, 캐릭터 등을 배치하는 HomeDesign 기능을 사용할 수 있습니다. \nCrane은 사용 용도에 따라 4가지 모드(Productive Viewer, Viewer, Editor,  Floor Planner)를 지원합니다.</p>\n\n<p><br /></p>\n\n<table style=\"text-align: left;\">\n    <tbody>\n        <tr style=\"width: 30%;\">\n            <td style=\"width: 30%;\"><h4>모드</h4></td>\n            <td><h4>설명</h4></td>\n        </tr>\n        <tr>\n            <td>Viewer</td>\n            <td>3D 건축물을 볼 수 있습니다.</td>\n        </tr>\n        <tr>\n            <td>Product Viewer</td>\n            <td>3D 제품을 볼 수 있습니다.</td>\n        </tr>\n        <tr>\n            <td>Editor</td>\n            <td>3D 건출물을 로드하고 직접 3D 제품들을 배치해 볼 수 있습니다.</td>\n        </tr>\n        <tr>\n            <td>Floor Planner</td>\n            <td>2D 상에 직접 그린 도면을 3D 건축물로 변환하여 볼 수 있습니다.</td>\n        </tr>\n    </tbody>\n</table>\n\n<p><br /></p>\n\n<h4>\n Crane의 <a href=\"https://developer.urbanbase.com/docs/core/TUTORIAL.html\" target=\"_blank\" style=\"color: #0366d6;\">  프로세스 및 API Reference</a>는 어반베이스 개발자 사이트에서 확인하실 수 있습니다.\n<h4>\n\n\n\n\n<br />\n<br />\n\n<hr />\n<br />\n<br />\n<h3>\n3D Home Design 기술을 보유한 어반베이스는 3D 공간데이터 플랫폼입니다.\n</h3>\n<br />\n<h4>\n전 세계의 모든 공간정보를 하나의 플랫폼 안에서 자유롭게 활용할 수 있도록 도면 변환 기술 및 AR, VR 뷰어 기술이 담긴 API와 SDK를 제공하고 있습니다.<br />\n<br />\n<br />\n\n<br />\n\n\n어반베이스 개발자 사이트 <a href=\"https://developer.urbanbase.com\" target=\"_blank\" style=\"color: #0366d6;\"> 자세히 보기</a>\n</h4>\n<br /><br /><br />\n</h4></h4>\n"
    } ,
  
    {
      "title"    : "도면을 직접 그리고 바로 3D로 볼 수 있는 Live Sketch",
      "category" : "",
      "tags"     : "livesketch, urbanbase, floorplan, 3Dconverting, and 3Dmodeling",
      "url"      : "/2019/02/15/livesketch.html",
      "date"     : "2019-02-15 16:00:00 +0000",
      "content"   : "<h1 id=\"live-sketch-api-interface\">Live Sketch (API, Interface)</h1>\n<p><code class=\"highlighter-rouge\">Live Sketch</code>는 사용자가 웹상에서 직접 설계도면을 그리고 아이템들을 배치할 수 있는 Sketch 서비스입니다.</p>\n\n<p>제작된 2D를 실시간으로 3D 변환해서 보여줌으로 사용자의 경험치를 극대화 시킵니다.\n기존에는 AutoCAD, SketchUp 등은 일반인들이 다루기 어려워 전문인력 고용을 통해 설계 도면을 제작을 했기에 비용, 시간, 인력의 소비가 불가피 하였습니다.\n하지만 <code class=\"highlighter-rouge\">Live Sketch</code>를 통하여 일반사용자들이 웹상에서 쉽게 도면을 그리고 그대로 3D 모델링 된 건축물을 바로 볼 수 있으며 해당 도면상에 직접 아이템들을 배치하여 인테리어를 계획할 수 있게 되었습니다.</p>\n\n<p><br /></p>\n\n<h2 id=\"live-sketch-demo-br\">Live Sketch Demo <br /></h2>\n\n<p><a href=\"/assets/tech(demo)/2. live sketch.gif\"><img src=\"/assets/tech(demo)/2. live sketch.gif\" alt=\"live sketch\" /></a></p>\n\n<h4> Live Sketch를 직접 만나보세요. \n<br />\n<a href=\"http://3d.floorplanner.urbanbase.com.s3-website.ap-northeast-2.amazonaws.com\" target=\"_blank\" style=\"color: #0366d6;\"> &gt;Live Sketch 경험 하기</a> </h4>\n\n<p><br /></p>\n\n<h2 id=\"section\">기술 설명</h2>\n\n<p><code class=\"highlighter-rouge\">Live Sketch</code>는 사용자가 깊은 전문적인 지식이 없이도 스스로 건축물의 평면도를 그리고 3D화 하여 확인해 볼 수 있는 서비스입니다.</p>\n\n<p>고가의 3D 모델링 툴을 사용하거나 익힐 필요 없이 간단한 조작만으로 건물모델링을 제작, 편집이 가능하여, 집 구조의 프로토타입 제작 시 시간단축에 큰 이점이 있습니다.</p>\n\n<p>3D화 한 오브젝트를 여러 각도로 둘러보고, 임의로 창과 문을 배치해 볼 수 있습니다.\n<br />\n<br /></p>\n\n<h2 id=\"section-1\">라이브 스케치 모드</h2>\n\n<table style=\"text-align: left;\">\n<tbody>\n<tr style=\"width: 220px;\">\n    <td style=\"width: 220px;\">Edit Mode</td>\n    <td>건축물의 2D 평면도를 그리고 문과 창을 배치합니다.</td>\n</tr>\n<tr>\n    <td>View Mode</td>\n    <td>작성한 평면도를 바탕으로 3D화 하여 확인합니다.</td>\n</tr>\n</tbody>\n</table>\n\n<p><br /></p>\n<h3 id=\"edit-mode\">Edit Mode</h3>\n\n<ul>\n  <li>\n    <p>Wall Editing</p>\n\n    <p>벽 구조물을 수정합니다.</p>\n\n    <table style=\"text-align: left;\">\n  <tbody>\n      <tr style=\"width: 220px;\">\n      <td style=\"width: 220px;\">벽 생성</td>\n      <td>2D 평면도에서 Wall 편집 버튼이 활성화 되어있으면, 빈 공간을 클릭하여 벽생성을 시작하고, 다음 지점을 클릭하여 이어 나가는 방식으로 진행합니다. 종료지점에서 더블클릭을 하여 그리기를 중단합니다.</td>\n      </tr>\n      <tr>\n      <td>벽 이동</td>\n      <td>2D평면도 상에 그려진 선이나 점을 클릭하여 컨텍스트 메뉴를 띄운 후, 이동버튼을 누릅니다. 이 때 벽은 마우스에 스냅이 되고, 이동시킬 목표지점에서 클릭을 하면 벽이동이 완료됩니다.</td>\n      </tr>\n      <tr>\n      <td>벽 삭제</td>\n      <td>삭제하고자 하는 선이나 점을 클릭하여 컨텍스트 메뉴를 띄운 후, 삭제버튼을 누릅니다.</td>\n      </tr>\n  </tbody>\n  </table>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<ul>\n  <li>\n    <p>Door/Window Editing</p>\n\n    <p>작성한 벽 위에 문/창문을 배치합니다.</p>\n\n    <table style=\"text-align: left;\">\n  <tbody>\n  <tr style=\"width: 220px;\">\n      <td style=\"width: 220px;\">문/창문 생성</td>\n      <td>2D 평면도에서 작성된 선의 원하는 위치를 더블 클릭하여 문/창문을 생성합니다.</td>\n  </tr>\n  <tr>\n      <td>문/창문 삭제</td>\n      <td>삭제하고자 하는 문/창문을 클릭하여 컨텍스트 메뉴의 삭제버튼을 누릅니다.</td>\n  </tr>\n  </tbody>\n  </table>\n  </li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h3 id=\"camera-control\">Camera Control</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">기능</th>\n      <th style=\"text-align: center\">입력키</th>\n      <th style=\"text-align: center\">보조키</th>\n      <th style=\"text-align: center\">설명</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">확대</td>\n      <td style=\"text-align: center\">‘Zoom in’ button</td>\n      <td style=\"text-align: center\">Mouse wheel Up</td>\n      <td style=\"text-align: center\">화면을 확대합니다.</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">축소</td>\n      <td style=\"text-align: center\">‘Zoom out’button</td>\n      <td style=\"text-align: center\">Mouse wheel Down</td>\n      <td style=\"text-align: center\">화면을 축소합니다.</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">원점</td>\n      <td style=\"text-align: center\">‘Origin’button</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">기본 시작점과 스케일로 회귀 합니다.</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">원점</td>\n      <td style=\"text-align: center\">Mouse right button + drag</td>\n      <td style=\"text-align: center\">-</td>\n      <td style=\"text-align: center\">뷰 화면을 잡고 뷰를 이동시킵니다.</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br /></p>\n\n<hr />\n\n<p><br />\n<br /></p>\n<h3>\nLive Sketch 기술을 보유한 어반베이스는 3D 공간데이터 플랫폼입니다.\n</h3>\n<p><br /></p>\n<h4>\n전 세계의 모든 공간정보를 하나의 플랫폼 안에서 자유롭게 활용할 수 있도록 도면 변환 기술 및 AR, VR 뷰어 기술이 담긴 API와 SDK를 제공하고 있습니다.<br />\n<br />\n<br />\n\n<br />\n\n\n어반베이스 개발자 사이트 <a href=\"https://developer.urbanbase.com\" target=\"_blank\" style=\"color: #0366d6;\"> 자세히 보기</a>\n</h4>\n<p><br /><br /><br /></p>\n"
    } ,
  
    {
      "title"    : "실시간 도면 자동 변환 서비스 Auto Sketch",
      "category" : "",
      "tags"     : "autosketch, urbanbase, ComputerVision, machinelearning, 3Dconverting, and 3Dmodeling",
      "url"      : "/2019/02/11/autosketch.html",
      "date"     : "2019-02-11 16:43:59 +0000",
      "content"   : "<h1 id=\"auto-sketch-api-engine\">Auto Sketch (API, Engine)</h1>\n<p><code class=\"highlighter-rouge\">Auto sketch</code>는 세계 유일의 실시간 도면 자동 변환 서비스입니다.</p>\n\n<p>어반베이스는 특허받은 2D 도면의 3D 도면 변환 기술로 세계 최대의 3D 공간 DB를 구축했습니다. Auto desk CAD, SketchUp에 플러그인을 제공하여 확장성을 넓혀가고, Live sketch 기술을 고도화하여 사용자가 직접 그린 도면을 자유롭게 2D 또는 3D로 변환할 수 있는 서비스를 예정 중입니다.</p>\n\n<p><br />\n<br /></p>\n\n<h2 id=\"auto-sketch-demo-br\">Auto Sketch Demo <br /></h2>\n<h4>Auto Sketch 데모 영상 확인하기</h4>\n\n<p><strong>이미지를 클릭하면 영상으로 이동합니다.</strong>\n<a href=\"https://youtu.be/sHmokPYTp2Q\" target=\"_blank\"><img src=\"/assets/tech(demo)/1. auto sketch (thumbnail).png\" alt=\"autosketch\" /></a>\n<br />\n<br />\n<br /></p>\n<h2 id=\"section\">기술 설명</h2>\n\n<p><code class=\"highlighter-rouge\">Auto Sketch</code>를 사용할 경우, 도면 이미지를 활용하여 <strong>다양한 3D 확장자(*.obj, *.dae 등)의 3D 모델링 파일</strong> 로 변환할 수 있습니다. <br />\n<code class=\"highlighter-rouge\">2D-3D Converting</code> 기술로 인하여 직접 3D 모델링 파일을 제작하거나, 2D CAD 도면 (*.dwg) 등을 공유하지 않아도 시각적으로 바로 확인할 수 있습니다. <br />\n실물 모형 및 도면 파일은, 보안, 모형 및 파일 손상 등의 문제가 발생할 수 있지만 <code class=\"highlighter-rouge\">Auto Sketch</code> 는 인터넷과 jpg 파일만 있으면 언제 어디서나 <strong>3D 모델링 결과를 확인 할 수 있습니다.</strong> <br />\n<br />\n<code class=\"highlighter-rouge\">Auto Sketch</code>를 활용할 경우 <strong>파일 용량 감소, 보안상의 문제 해결, 비용 절감, 편의성 증대</strong>가 가능해집니다.\n<br />\n<br />\n<br /></p>\n<h2 id=\"section-1\">프로세스</h2>\n\n<table>\n  <thead>\n    <tr>\n      <th><center>Before</center></th>\n      <th><center>After</center></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"/assets/tech(demo)/1.auto sketch (before).jpg\"><img src=\"/assets/tech(demo)/1. auto sketch (before).jpg\" alt=\"before\" /></a></td>\n      <td><a href=\"/assets/tech(demo)/1. auto sketch (after).png\"><img src=\"/assets/tech(demo)/1. auto sketch (after).png\" alt=\"after\" /></a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br />\n<br />\n기존에는 2D 도면에서 3D로 변환 시 치수 수정, 영역 분리, 개별 모델링 등 다소 복잡한 처리 과정을 거쳐야 했지만 <code class=\"highlighter-rouge\">Auto Sketch</code>를 활용할 경우, 이미지 파일을 <strong>Drag and Drop</strong>하여 바로 결과를 확인할 수 있어 작업 처리 시간을 단축할 수 있습니다. <br />\n<br />\n또한 <code class=\"highlighter-rouge\">Auto Sketch</code> 엔진은 각 구역의 특징을 분석하여 바닥재 및 벽재 등을 기본적으로 분석하여 제공해주며, <code class=\"highlighter-rouge\">Computer Vision</code>, <code class=\"highlighter-rouge\">Machine Learning</code>, <code class=\"highlighter-rouge\">Auto Sketch</code> 알고리즘을 통하여 유의미한 의미를 가지는 3D 모델링 파일을 제공할 수 있습니다. \n<br />\n<br />\n<br /></p>\n<h2 id=\"section-2\">응용분야</h2>\n<h3 id=\"section-3\">목업 제작</h3>\n<p><code class=\"highlighter-rouge\">Auto Sketch</code>를 이용하여 실물 목업 제작 시 보여질 모습을 3D로 미리 확인해 볼 수 있으며 제작한 도면을 확인한 후 보완 및 수정이 용이 해 집니다.\n<br />\n<br /></p>\n<h3 id=\"section-4\">응용 프로그램 빌드, 실행 및 테스트</h3>\n<p><code class=\"highlighter-rouge\">Auto Sketch</code>에서 <strong>저용량 이미지 파일 (*.jpg, *.png, *.bmp) 등의 도면 이미지</strong>만 입력하면 <code class=\"highlighter-rouge\">Computer Vision</code>, <code class=\"highlighter-rouge\">Machine Learning</code> 등을 통하여 3D 모델링 파일로 불러올 수 있습니다.\n<br />\n<br /></p>\n<h3 id=\"section-5\">실시간 다자간 온라인 화상 회의</h3>\n<p><code class=\"highlighter-rouge\">Auto Sketch</code>를  Web으로 구현하여 실시간으로 도면 이미지를 <strong>3D 모델링 파일을 시각적으로 확인</strong>할 수 있습니다. 따라서 온라인 화상 회의를 통하여 공간적 한계가 사라지고 실물 목업 운반 등의 문제점을 해결 할 수 있습니다.\n<br />\n<br />\n<br /></p>\n\n<hr />\n<p><br />\n<br /></p>\n<h3>\nAuto Sketch 기술을 보유한 어반베이스는 3D 공간데이터 플랫폼입니다.\n</h3>\n<p><br /></p>\n<h4>\n전 세계의 모든 공간정보를 하나의 플랫폼 안에서 자유롭게 활용할 수 있도록 도면 변환 기술 및 AR, VR 뷰어 기술이 담긴 API와 SDK를 제공하고 있습니다.<br />\n<br />\n<br />\n\n<br />\n\n\n어반베이스 개발자 사이트 <a href=\"https://developer.urbanbase.com\" target=\"_blank\" style=\"color: #0366d6;\"> 자세히 보기</a>\n</h4>\n<p><br /><br /><br /></p>\n"
    } 
  
  
    
,
  {
    "title"    : "We",
    "category" : "",
    "tags"     : "",
    "url"      : "/we/",
    "date"     : "",
    "content"   : "<div class=\"site-header-container has-cover\" style=\"background-image: url(/assets/header_image.jpg);\">\n  <div class=\"scrim has-cover\">\n    <header class=\"site-header\">\n      <h1 class=\"title\">We</h1>\n      <p class=\"subtitle\"></p>\n    </header>\n  </div>\n</div>\n\n<!-- <img src=\"/assets/profile-placeholder.gif\" title=\"Profile Picture\" class=\"profile\"> -->\n\n<center>\n<br />\n<br />\n<h2>“Invent the Next World!”</h2>\n<br />\n어반베이스는 전 세계의 모든 실내공간정보를 하나의 플랫폼안에서 자유롭게 활용할 수 있는\n<br />\n도면변환 기술 및 AR, VR 뷰어 서비스를 개발하고 있는 3D 공간데이터 플랫폼입니다.\n<br />\n<br />\n어반베이스 테크 블로그를 통해 \n<br />\n머신러닝, AR, VR 등 우리가 다루고 있는 핵심 기술에 대한 이야기\n<br />\n그리고, 해당 기술을 담당하고 있는 개발자들의 개발 라이프를 차근차근 기록해 나갈 예정입니다. \n<br />\n어반베이스의 기술과 개발팀에 대한 애정 어린 조언, 날카로운 피드백, 언제나 대환영입니다!\n<br />\n<br />\n\n\n<hr />\n\n\n<br />\n<h4> Urbanbase Product </h4>\n\n실시간 도면 자동 변환 서비스 <a href=\"https://urbanbase.github.io/2019/02/11/autosketch.html\" target=\"_blank\" style=\"color: #0366d6;\"> Auto Sketch</a>\n<br />\n도면을 직접 그리고 바로 3D로 볼 수 있는 <a href=\"https://urbanbase.github.io/2019/02/15/livesketch.html\" target=\"_blank\" style=\"color: #0366d6;\"> Live Sketch</a>\n<br />\n3D로 즐기는 가상의 인테리어 <a href=\"https://urbanbase.github.io/2019/03/07/3DHomedesign.html\" target=\"_blank\" style=\"color: #0366d6;\"> 3D Home Design</a>\n<br />\n3D 객체들의 렌더링을 담당하는 <a href=\"https://urbanbase.github.io/2019/03/07/3DHomedesign.html\" target=\"_blank\" style=\"color: #0366d6;\"> 3D Viewer</a>\n<br />\n3D 객체를 AR로 핸들링할 수 있는 <a href=\"https://urbanbase.github.io/2019/03/13/ARviewer.html\" target=\"_blank\" style=\"color: #0366d6;\"> AR Viewer</a>\n<br />\n공간분석 AI 서비스 <a href=\"https://urbanbase.github.io/2019/03/13/Taker.html\" target=\"_blank\" style=\"color: #0366d6;\"> Taker</a>\n<br />\n<br />\n<a href=\"https://developer.urbanbase.com\" target=\"_blank\" style=\"color: #0366d6;\">어반베이스에 대해 더 알고 싶으시다고요?</a>\n</center>\n"
  }
    
  
    
,
  {
    "title"    : "Dev",
    "category" : "",
    "tags"     : "",
    "url"      : "/dev/",
    "date"     : "",
    "content"   : "<div class=\"wrapper\">\n\n\n    \n    \n\n    \n    \n    <h2 id=\"dev\">Dev</h2>\n    \n      \n        <p class=\"desc\"><em>Developer posts</em></p>\n      \n    \n      \n    \n    <ul class=\"posts-list\">\n    \n      <li>\n        <strong>\n          <a href=\"/dev/2019/07/02/June.html\">데이터를 아름답게 표현하는 방법에 관하여 (ft.Keijiro Takahashi)</a>\n        </strong>\n        <span class=\"post-date\">- 03 July 2019</span>\n      </li>\n    \n      <li>\n        <strong>\n          <a href=\"/dev/2019/06/03/Morphological-Transformations.html\">모폴로지 변환 활용해 도면의 벽 검출하기</a>\n        </strong>\n        <span class=\"post-date\">- 03 June 2019</span>\n      </li>\n    \n    </ul>\n    \n  \n\n\n</div>\n\n<br>"
  }
    
  
    
  
    
  
    
  
    
  
    
  
    
,
  {
    "title"    : "Tech",
    "category" : "",
    "tags"     : "",
    "url"      : "/tech/",
    "date"     : "",
    "content"   : "<div class=\"wrapper\">\n\n{% for category in site.categories %}\n    {% capture cat %}{{ category | first }}{% endcapture %}\n    {% if {{cat}} == \"tech\" %}\n    <h2 id=\"{{cat}}\">{{ cat | capitalize }}</h2>\n    {% for desc in site.descriptions %}\n      {% if desc.cat == cat %}\n        <p class=\"desc\"><em>{{ desc.desc }}</em></p>\n      {% endif %}\n    {% endfor %}\n    <ul class=\"posts-list\">\n    {% for post in site.categories[cat] %}\n      <li>\n        <strong>\n          <a href=\"{{ post.url | prepend: site.baseurl }}\">{{ post.title }}</a>\n        </strong>\n        <span class=\"post-date\">- {{ post.date | date_to_long_string }}</span>\n      </li>\n    {% endfor %}\n    </ul>\n    {% if forloop.last == false %}<hr>{% endif %}\n  {% endif %}\n{% endfor %}\n\n</div>\n\n<br>\n"
  }
    
  
    
,
  {
    "title"    : "",
    "category" : "",
    "tags"     : "",
    "url"      : "/init/welcome.html",
    "date"     : "2019-04-02 08:43:59 +0000",
    "content"   : "<br>\n\n작년 여름 방현우 CTO가 어반베이스에 막 합류했을 때쯤, 인터뷰를 진행하던 기자분이 어떤 개발자상을 선호하냐고 물었습니다. <br>\n“오타쿠 같은 개발자를 원한다”고 하더군요. 읭? 그땐 사실 좀 의아했습니다. <br>\n오타쿠라니.. #왕고집 #마이웨이 #사회성부족 etc., 오타쿠에 대한 뭐 이런 진부한 편견을 가지고 있었거든요. <br> 그로부터 수개월이 지나 어느 정도 진열이 정비된 개발팀을 둘러보고 있노라니 방현우 CTO가 어떤 의미로 그런 말을 했는지 이제 좀 이해가 갑니다. \n<br>\n<br>\n\n\n**어반베이스 개발팀에는 오타쿠가 참 많습니다.** <br>\n쉴 때 ~~왜 하필~~ 깃허브를 가지고 논다는 머신러닝 개발자도 있고요. 미국에서 열리는 AWS 행사에 꼭 가겠다며 영어회화 학원을 다니기 시작한 API 개발자는 새롭게 배운 표현들을 활용해 만든 한문장들을 ~~굳이~~ 자기 페북에 인증하며 열정을 불태우고 있는 중이죠. 데모용으로 만든 ~~병맛~~ 호러 게임들을 타운홀에서 VR로 시연하던 3D 그래픽 개발자의 얼굴에서 세상 다 가진 것 같은 미소를 보기도 했고요(제 기억에 이분은 잠을 4시간 이상 자본적이 없다고 했..). 회사 출퇴근 서비스앱 UX가 불편하다며 자체 개편 서비스를 만들고는 마주칠 때마다 피드백 달라고 ~~귀찮게~~ 하는 프론트엔드 개발자도 있습니다.\n<br>\n<br>\n\n**그도 그럴 것이 우리가 다루는 기술과 서비스는 갓글링도 해결해주지 못하는 지대에 꽤 많이 걸쳐 있습니다.** <br> 그래서 어반베이스 개발팀에는 누가 시키지 않아도 자발적으로,남들은 잘 이해 못해도 스스로는 만족스러운, 별거 아닌 듯 보이지만 결국엔 큰 차이를 만들어내는 일들을 끊임없이 고민하고, 실험하며, 창조해내는 오타쿠들이 다수 모여 있죠. 이제 막 세상 밖으로 나온 어반베이스의 작품들은 이런 개발 오타쿠들의 손을 거쳐 한땀한땀 만들어지고 있습니다. \n<br>\n<br>\n\n**우리는 더 많은 개발 오타쿠들과 함께 하기를 원합니다.** <br> \n그들의 전문적인 견해를 개발 과정에 적극 반영할 오픈 마인드는 물론이고요, 그들의 배움을 열렬히 지지하고 지원할 준비도 이미 만땅 되어 있답니다. 개발팀별 기술 스택을 하단에 간략하게 곁들입니다. 보시고 “내가 이 구역의 오타쿠인데” 라는 생각이 드신다면 일단 가볍게 문을 두드려 주세요. 설득은 우리의 몫이니까요.  \n<br>\n<br>\n\n## 어반베이스 ML&CV Team이 사용 중인 기술입니다.\n- Python: 사용이 쉬운 멀티 패러다임 프로그래밍 언어로 OpenCV, Tensorflow, Pytorch, Django 등 다양하고 효율적인 패키지를 지원합니다.\n- CV: <a href=\"https://urbanbase.github.io/2019/02/11/autosketch.html\" target=\"_blank\" style=\"color: #0366d6;\"> Auto Sketch</a>에서 도면 분석 시, 2D⇢3D 전환을 위한 메타데이터 획득을 위해 사용합니다.\n- ML: 사람이 처리해 결과를 얻기 어려운 부분에서 Tensorflow, Pytorch 등을 활용하고 있습니다.\n- 딥러닝 프레임워크: Tensorflow와 MXnet를 기본으로 딥러닝 모델 학습을 수행하고 있습니다. \n- TensorFlow: 데이터 흐름 그래프를 사용하는 수치 연산용 오픈소스 소프트웨어 라이브러리로, TensorFlow 코드를 사용하여 데이터에 맞는 딥러닝 모델을 교육하고 있습니다.\n- MXNet: 분산시스템 전문가들이 개발한 프레임워크로 분산 시스템(distributed system)을 지원하는 것이 특징입니다. MXNet의 여러가지 데이터 처리 툴을 이용하여 딥러닝 모델 교육 전, 데이터 전처리를 하는데 용이하게 사용하고 있습니다.\n- Django: 보안이 우수하고 유지보수가 편리한 웹사이트를 신속하게 개발하도록 도움을 주는 Python 웹 프레임워크로, Django Rest Framwork(DRF)를 사용하여 <a href=\"https://urbanbase.github.io/2019/03/13/Taker.html\" target=\"_blank\" style=\"color: #0366d6;\"> Space Taker</a>의 API를 개발하였습니다.\n<br>\n<br>\n<br>\n\n## 어반베이스 3D Team이 사용 중인 기술입니다.\n- Unity Engine: Unity Technologies에서 개발한 크로스 플랫폼 게임 엔진으로 Direct3D, OpenGL, OpenGL ES, WebGL, Metal, Vulkan 등 다양한 그래픽 API를 지원합니다. 현재 Unity 2018.3 버전을 사용하여 개발 중이며, 2019 버전으로 판올림을 준비하고 있습니다.\n- C#: 유니티 엔진의 기본 개발 언어인 C#은 기본 로직뿐만 아니라 쉐이더(shader) 코드까지 수정 가능한 유연한 툴입니다. 스크립팅 IDE로는 기본적으로 MonoDevelop과 Visual Studio를 사용할 수 있습니다. \n- Three.js: 웹에서 3D 그래픽을 다룰 수 있도록 WebGL의 기능을 JavaScript 로 만든 라이브러리입니다. JavaScript를 다룰 수 있는 개발자 중에서도 기하학을 이해하는 개발자들이 수월하게 개발할 수 있습니다.\n- 절차지향 모델링: 모델링 정보가 정적인 상태의 파일을 부르지 않고, 프로그램 런타임 중에 구조를 생성하는 모델링 방식입니다. 모델링 구조 변경이 자유롭고, 일정 패턴을 반복적으로 생성할 때 공수가 적게 들기 때문에 <a href=\"https://urbanbase.github.io/2019/02/15/livesketch.html\" target=\"_blank\" style=\"color: #0366d6;\"> Live Sketch </a> 개발 시 중요하게 사용하고 있습니다.\n<br>\n<br>\n<br>\n\n## 어반베이스 Mobile Team이 사용 중인 기술입니다.\n- Swift: iOS 개발 환경에서 기존의 objective-c 보다 클래스 모듈화, 디자인 패턴 적용 등에 용이해 사용하고 있습니다.\n- ARKit/SceneKit: Apple의 AR 프레임워크로 트레킹부터 3D 렌더링까지 아이폰 환경에 최적화된 증강현실 기능을 구현할 수 있도록 합니다. \n- ARCore/Sceneform: Google의 AR 프레임워크로 트레킹부터 3D 렌더링까지 안드로이드 환경에 최적화된 증강현실 기능을 구현할 수 있도록 합니다.\n- Kotlin: 안드로이드 공식 언어로 추가되었고, Swift에 많은 영향을 끼쳤다고 알려져 있습니다. Java 대비 개발효율이 높다고 판단되어 주 언어로 사용 중입니다.\n- Java: 안드로이드 개발에 보편적으로 사용된 언어이기 때문에 Java를 사용하는 기존 개발사 대상 배포를 위해 부분적으로 사용 중입니다.\n<br>\n<br>\n<br>\n\n## 어반베이스 API Team이 사용 중인 기술입니다.\n- node.js: 생산성을 높이기 위해 채택하여 개발 중이며, 싱글쓰레드로 동작하기 때문에 일반적인 웹 서비스에 적합한 서버를 구성하기 좋습니다.\n- Meteor: 개발환경을 쉽게 구축할 수 있고, 자바스크립트로만 구성되어 있기 때문에 풀스택 개발자가 빠르게 서비스를 개발할 수 있어 채택하고 있습니다. \n- Mongodb: 문서-지향 데이터베이스이며, Json 형태로 구성하고 있어 JavaScript 기반의 node.js, meteor와 잘 맞아 사용하고 있습니다. \n- AWS: 마이크로 서비스를 위한 서버리스 아키텍처를 채택하여, Amazon API Gateway, AWS Lambda, Amazon S3, Amazon Cognito 등 현재 AWS에서 제공하는 다양한 서비스를 활용하고 있습니다.\n- Database: 클라우드에서 관계형 데이터베이스를 간편하게 설정, 운영 및 확장할 수 있는 장점을 활용하고자 현재 Amazon RDS(PostgreSQL)를 사용하고 있습니다.\n- Serverless: 대부분의 API는 AWS 인프라로 동작되는데, Serverless를 통해 AWS와 연동이 잘돼 사용하고 있습니다. \n<br>\n<br>\n<br>\n\n## 어반베이스 UI, UX Team이 사용 중인 기술입니다.\n- Vanilla JS: 속도를 보장하면서 라이브러리를 사용하지 않기 때문에 용량이 적고 빠른 개발을 할 수 있습니다.\n- Vue.js & ReactJS: 최신 F/E 프레임워크를 이용해 효율적인 디자인 패턴을 구현하고, 스피드한 개발 및 모듈화가 가능해 채택하고 있습니다.\n"
  }
    
  
    
  
]
